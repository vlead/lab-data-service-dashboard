#+TITLE: Web Frontend for Lab Data Service Dashboard
#+AUTHOR: VLEAD
#+DATE: [2017-06-05 Mon]
#+SETUPFILE: ../../org-templates/level-2.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This "Literate Document" is an illustration of building the client side
  frontend for our LDS app. This represents our approach for the attempt to
  create a LDS dashboard as a "Single Page Application", which actually means
  that along with Decorative JS residing and HTML rendering which happens
  traditionally, Business Logic JS residing and HTML generation will also take
  place at the client side. This helps us achieve a lot of tasks which wouldn't
  have been possible with a simple website. Some of them just being
  1. Redrawing only that part of the page that is needed and not whole of the
     page; thus there's a rapid rendering and feedback attached to SPA.
  2. Minimizing the response time by keeping the working data from the server
     to the browser whereever possible with assurance of it's safety against
     any kind of manipulation.
  3. Global accessibility since it only needs a browser that could render HTML
     and JS, which is now supported by most of OS and simply saying devices for
     usage.
  
  Now the stage has been set with the basic sight of our aim we may now proceed
  towards writing JavaScript that would render our frontend HTML and define the
  Business logic.
 
* Front-End JavaScript
  When we start to create a web page the first thing we need to do is to
  modularise the functionality. We need to start to Give thoughts about making
  functions and variables that aid those functions that could be the universal
  solutions for your functionality needs. We might begin with the function that
  will be governing the part of HTML (and it's inner elements) which are
  supposed to stay constant throughout any user session and then begin with
  definitions of functions to get required data from server and the local
  files. Then finally function aiding the dynamic behaviour of our page which
  includes generation of elements and their updatation. We now begin with a
  variable declaration(s) which will aid the functions required for our first
  step.
  
  Naming conventions play a key role in our implementation in order to make the
  functions work for any further addition or modification to data. Pay close
  attention to exploitation of naming convention in order to make most out of
  functions and make them immutable to addition/deletion of data, which is
  basically the DOM elements, they are required to process.

** Auth API
   In our implementation the top naviagation bar is the only DOM entity to be
   harcoded in our HTML file and thus remain constant in all user sessions but
   it's carries a button element that change it's attributes on the basis of
   session login state. Thus we define an object that could store the routes,
   which are already implemented in the backend, this button will redirect
   to. In our case it's just login and logout.

#+NAME: auth_api
#+BEGIN_SRC js 
var AuthAPI = {
  login: function() {
    window.location.href = '/login';
  },
  logout: function() {
    window.location.href = '/logout';
  }
};

#+END_SRC

   At first even route to home, since navigation bar had another button element
   for home; was part of this object but since functionality of home emerged
   more as hash route, it was removed from here. It now exist as a hash route,
   content for which other than the side navigation bar has not been decided
   yet.

** Index Handler
   Now we needed a function that could change the attributes of elements of our
   navigation bar just on the basis the current login session state. We came up
   with this function which would be taking login session state data from
   another helper function to update our DOM elements as required, which are
   innerHTML content in this case along with glyph icons for eye candy part.

#+NAME: index_handler
#+BEGIN_SRC js
var index_handler = function() {
  var auth_btn = $('#login-logout-btn')[0];
  var span_btn = $('#login-logout-spn')[0];
  if (logged) {
    get_users();
    get_roles();
    show_one_container('side-nav-container');
    load_role_users();
    auth_btn.onclick = AuthAPI.logout;
    auth_btn.innerHTML = span_btn.outerHTML + '  ' + ' LOGOUT';
    span_btn = $('#login-logout-spn')[0];
    span_btn.className = 'glyphicon glyphicon-log-out';
  }
  else {
    hide_all_containers();
    auth_btn.onclick = AuthAPI.login;
    auth_btn.innerHTML = span_btn.outerHTML + '  ' + ' LOGIN';
    span_btn = $('#login-logout-spn')[0];
    span_btn.className = 'glyphicon glyphicon-log-in';
  }
};

#+END_SRC   
   
** Logged In
   Now it is the time to define the define the helper function that would be
   provided our previous function the login session state details.  In order to
   get this data in need to interact with the server. We use an Synchronus AJAX
   call for it because we dont want the stale data to interfere with the
   updatation fo DOM content at any given moment.

#+NAME: logged_in
#+BEGIN_SRC js 
var is_logged_in = function() {
  $.ajax({
    url: 'logged_in',
    type: 'GET',
    contentType: 'charset=UTF-8',
    async: false,
    success: function (response) {
      logged = true;
      session_detail = response.session;
      Object.freeze(session_detail);
    },
    error: function (response) { 
      logged = false;
    }
  });
  return logged;
};  

#+END_SRC

** Get JSON
   After working on the DOM elements that were supposed to stay constant
   throught the user session to it is time to define function that could will
   help us to get HTML data to populate for the current user session from the
   local JSON file. We defines two functions to get Dashboard and Side
   Navigation Bar seperately as of now which might change towards our final
   draft. This data is planned to be fed to functions that would genrate
   elements for us and finally appends them to the body.

#+NAME: get_json
#+BEGIN_SRC js 
getJSON = function(role) {
  $.ajax({
    url: 'static/js/main.json',
    dataType: 'json',
    async: false,
    success: function (response) {
      data = []
      className1 = role+ '_nav';
      className2 = role+ '_dash';
      data[0] = response[className1];
      data[1] = response[className2];
    },
    error: function() {
      data = null;
    }
  });
  return data;
};
#+END_SRC
** Docoding a JSON
   Since we had the HTML data in JSON format we were in a need of functions to
   which would be able process this data and generatee the required elements
   which we would be able to attach to our body one by one. We seperated the
   required functionality in three parts which are first to get the data, then
   process the data to create elements and then finally attach these elements
   to the body of HTML.

#+NAME: create_Division
#+BEGIN_SRC js

var createDivisions = function () {
  jsonData = getJSON(session_detail.role)
  console.log(jsonData)
  attachDivsionsToBody(jsonData[0].map(createElements));
  attachDivsionsToBody(jsonData[1].map(createElements));
};

#+END_SRC

#+NAME: decoding_Json
#+BEGIN_SRC js
var createElements = function(element) {
  var new_ele = document.createElement(element.typeofdiv);
  for (i in element) {
    if (i === 'class') {
      new_ele.className = element[i];
    }
    else if (i !== 'elements' && i !== 'typeofdiv') {
      new_ele[i] = element[i];
    }
  }
  if (element['elements']) {
    element['elements'].forEach(function (ele) {
      var temp_element = createElements(ele);
      new_ele.appendChild(temp_element)
    });
  }
  return new_ele;
};
#+END_SRC

#+NAME: attach_Division
#+BEGIN_SRC js
var attachDivsionsToBody = function (divisions) {
  divisions.forEach(function (division) {
    document.getElementById('body').appendChild(division);
  });
};
#+END_SRC

** Hash to Handler Map
   For a Single Page Application like ours one of the must have part is a
   client side router. It knows how to tweak the content of the navigation/url
   bar and informs the rest system about the URL changes. We here tried to
   implement hash based routing for our app. A hash based routing uses anchor
   part of the URL to simulate different actions on the browser screen. A hash
   of the page for the example given below will be ~first-page~.

#+BEGIN_EXAMPLE
http://webapp.com/#first-page
#+END_EXAMPLE

   It is interesting to note that ~#first-page~ is never sent to server; hence
   doesn't need to be defined as route in our backend, since hash-routing never
   involves reloading of the page, it just helps in making the page dynamic at
   the client side. Though, This might arise another problem of 'Then how to
   register the accessible hashes?'. We would tackle all these problems and
   implementing our hash routing below using couple of functions.

   We start of with define an object =hash_to_handlers_map= that would contain
   all the available hash routes for us. In our case since home is common to
   all the user sessions, we start off with initialzing it with ~home~.

#+NAME: handlers_map
#+BEGIN_SRC js
hash_to_handlers_map = {home:'home'}; 
#+END_SRC

   Now we need to add the rest of available hash routes for the logged in user
   depending upon it's privlidges. We accomplish this task by creating a
   function that would search for all the elements in current populated HTML
   page (based on the user's role in the current session) for the substring
   ~-container~ in end of all the element ids. Once all the hash-routes are
   added we freeze the object in order to make sure no manipulation of our
   object takes places at the client side, which would prevent user to access
   unauthorized/non-existant hash routes.

#+NAME: handlers_map_func_def
#+BEGIN_SRC js
var handlers_map = function () {
  var select = document.querySelectorAll('[id$="-container"]');
  [].forEach.call(select, function (hash_name) {
    var id = hash_name.id.slice(0,-10);
    hash_to_handlers_map[id.valueOf()] = id;
  });
  Object.freeze(hash_to_handlers_map);
};

#+END_SRC

** Hash Route Navigation
   As we are now done with defining all our accessible hash routes, we now need
   the functions that could allow us to catch hold of the current window hash
   route and further navigate to a different hash route. We use the inbuilt
   JavaScript function window.location for the same.  We can also use hash path
   functions which are predefined in the JavaScript library and thus the
   definitons of the current version of this functions are subjected to change.
#+NAME: current_window_hash
#+BEGIN_SRC js
var get_window_hash_path = function() {
  var hash = window.location.href.split('#')[1] || '';
  return hash;
};
#+END_SRC

#+NAME: hash_navigate_function
#+BEGIN_SRC js
var navigate = function (path) {
  var current = window.location.href;
  window.location.href = current.replace(/#(.*)$/, '') + '#' + path;
};
#+END_SRC

** Register on hash change
   Now we need a function that would change our web page as soon as a different
   =hash= in the url is requested. This functions was supposed to check for the
   wether the hash change was done by side navigation bar button click or
   simply using the URL. This task has been accomplished by using a variable
   ~hashNotClicked~ in order to keep the track of the button hit/url change. We
   even check for the requested hash to be accessible to our user in the
   current session. Any attempt to access non-existant/unauthorized hash will
   give a alert and redirection to home shall happen.
 
#+NAME: register_on_hash_change
#+BEGIN_SRC js
var register_onhashchange_handlers = function(hash_to_handlers_map) {
  var updateHashCheck = /^update-*/;

  $(window).on('hashchange', function(e) {
    hash_path = get_window_hash_path();
    if (hash_to_handlers_map.hasOwnProperty(hash_path)) {
      if (hashNotClicked) {
        if (updateHashCheck.test(hash_path)) {  
          hide_all_containers();
          show_one_container('side-nav-container');
          show_one_container(hash_path+'-container');
          navigate(hash_path);
        }
      }
      else if (!hashNotClicked) {
        if (updateHashCheck.test(hash_path)) {
          window.alert('You are trying to access the page using wrong way!');
          hide_all_containers();
          show_one_container('side-nav-container');
          navigate('home');
        }
        else {
          document.getElementById('home-btn-'+ hash_path).click();
        }
      }
    }
    else {
      hide_all_containers();
      show_one_container('side-nav-container');
      navigate('home');
      window.alert('You are trying to access a wrong page');
    }
      hashNotClicked=false;
  });
};
#+END_SRC

** Show and Hide containers.
   Since we have stuck to SPA, we should be hiding and displaying stuff
 dynamically.  If the whole content is shown everytime, it will surely be a
 mess.So based on the hash, certain containers are hidden and certain
 containers are displayed.Below code shows to Show containers, Show only one
 container and Hide all containers.  We Basically extract the =id's= of the
 containers by the prefix or suffix and add or remove a class called
 =hidden=. We have defined this class hidden in the CSS file whose =display=
 attribute is set to =none=.

#+NAME: show_all_container
#+BEGIN_SRC js 
var show_all_containers = function() {
  var containers = document.querySelectorAll('[id$="-container"]');
  [].forEach.call(containers, function (container) {
    container.classList.remove('hidden');
  });
};
#+END_SRC

#+NAME: show_one_container
#+BEGIN_SRC js
var show_one_container = function(containerID) {
  $('#'+containerID).removeClass('hidden');
};
#+END_SRC

#+NAME: hide_all_container
#+BEGIN_SRC js
var hide_all_containers = function() {
  var containers = document.querySelectorAll('[id$="-container"]');
  [].forEach.call(containers, function (container) {
    container.classList.add('hidden');
  });
};
#+END_SRC

** Get Users
   Since this is a user directory, the admin should be able to view all the
users who are registered for LDS. So, we send a synchronous AJAX call to the
backend server and get the list of users. As of now, we have given this rights
only to admin.  Later on we can give access to other people based on our
requirements.

#+NAME: get_users
#+BEGIN_SRC js
var get_users = function() {
    $.ajax({
      url: 'users',
      type: 'GET',
      contentType: 'charset=UTF-8',
      async: false,
      success: function (response) {
        users_List = response.users;
      },
      error: function (response) {
        users_List = null;
      }
    });
};

#+END_SRC
** Get Roles
   Since this is a user directory, the admin should also be able to view all
the different types of roles registered to LDS. So, we send a synchronous AJAX
call to the backend server and get the list of roles available in the database.
As of now, we have given this rights only to admin. Later on we can give access
to other people based on our requirements.

#+NAME: get_roles
#+BEGIN_SRC js
var get_roles = function() {
    $.ajax({
      url: 'roles',
      type: 'GET',
      contentType: 'charset=UTF-8',
      async: false,
      success: function (response) {
        roles_List = response.roles;
      },
      error: function (response) {
        roles_List = null;
      }
    });
}; 

#+END_SRC

** Add User
   We now land on the Add operations. An =admin= has the access to add a user
to LDS services. Again as of now,we have given this access only to admin. Later
on, we can give access to other people also based on our requirements. We have
stuck to only 2 roles =admin= and =guest= as of now.To Add a user, his =name=,
=email= and =role= are required. If he gives an invalid input, an error is
thrown.  Event handler is attached to the =add-user= button which takes the
data from the input boxes and makes a synchronous AJAX call to the backend
server. Based on the responce it shows the success or error message.

#+NAME: add_user
#+BEGIN_SRC js
$(document).on('click', '#add-user-sbt', function(clickEvent) {
  var data = JSON.stringify({
    name: $('#add-user-name').val(),
    email: $('#add-user-email').val(),
    role: $('#add-user-role').val()
  });
  $.ajax({
    url: 'add_user',
    data: data,
    type: 'POST',
    contentType: 'application/json;charset=utf-8',
    async: false,
    success: function (response) {
      window.alert ('User was added');
    },
    error: function (response) {
      window.alert ('There was an error adding the user, please check the information you provided.');
    }
  });
});

#+END_SRC
** Add Role
   Moving on in the Add operations, an =admin= has the access to add a role to
LDS services. As of now, we have stuck to only 2 roles =admin= and
=guest=. Later on, we can add a new =role= and assign the necessary
restrictions to access based on our requirements.  To Add a role, =role_name=
is required and we have not implemented giving access rights to the
role.Probably as we move on ,we will assign restrictions to the new role. If he
gives an invalid input, an error is thrown.  Event handler is attached to the
=add-role= button which takes the data from the input boxes and makes a
synchronous AJAX call to the backend server. Based on the responce it shows the
success or error message.

#+NAME: add_role
#+BEGIN_SRC js
$(document).on('click', '#add-role-sbt', function(clickEvent) {
  var data = JSON.stringify({
    role_name: $('#add-role-name').val()
  });
  $.ajax({
    url: 'add_role',
    data: data,
    type: 'POST',
    contentType: 'application/json;charset=utf-8',
    async: false,
    success: function (response) {
      window.alert ('Role was added');
    },
    error: function (response) {
      window.alert ('There was an error adding the role, please check the information you provided.');
    }
  });
});
#+END_SRC

** Update And Remove User Helper on Admin Dash
   Simply adding a button against the operation does not suffice.  We ought to
 feed the button of what it is supposed to do when it is clicked. Since the
 button is not a human being,it just cant assume things and move on. It solely
 is our duty to explain it each and every thing.  All the Update buttons and
 the Remove buttons are extracted by their prefix =update-user-pre-sbt= and
 =remove-user-pre-sbt= respectively. The last part of the =id= is unique which
 actually helps us in identifying the button.

#+NAME: updateUserHelperFunction
#+BEGIN_SRC js
var updateHelperFunction = function() {
  var buttons = document.querySelectorAll('[id^="update-user-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       update_users(button);
  });
  var buttons = document.querySelectorAll('[id^="remove-user-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       remove_users(button);
  });
}
#+END_SRC

So, Event handlers are added to all the =update= and =remove= buttons.  Based
on the =id's= the buttons are extracted and each button is attached to an event
handler.

** Update User

#+NAME: update_users
#+BEGIN_SRC js
var update_users = function(button) {
	email = $('#'+button.id).attr('email');
  name = $('#'+button.id).attr('name');
  role = $('#'+button.id).attr('role');

  var present_user = is_logged_in().email;
  if(present_user==email)
  {
  $('#'+button.id).on('click', function(clickEvent){
    hashNotClicked=true;
    $('#update-profile-sbt').attr('email',email);
    $('#edit-new-name-own').val(name);
    $('#edit-new-email-own').val(email);
		navigate('update-profile');
   });
   }
  else
  {
  $('#'+button.id).on('click', function(clickEvent){
    hashNotClicked=true;
    $('#update-user-sbt').attr('email',email);
    $('#edit-new-name').val(name);
    $('#edit-new-email').val(email);
    $('#edit-user-role').val(role);
		navigate('update-user');
	});
  }
};

$(document).on('click', '#update-user-sbt', function(clickEvent) {
  var data = JSON.stringify({
    email: $('#update-user-sbt').attr('email'),
    new_name: $('#edit-new-name').val(),
    new_email: $('#edit-new-email').val(),
    new_role: $('#edit-user-role').val()
  });
  $.ajax({
    url: 'update_user',
    data: data,
    type: 'PUT',
    contentType: 'application/json;charset=utf-8',
    async: false,
    success: function (response) {
      window.alert ('User was updated');
    },
    error: function (response) {
      window.alert ('There was an error updating the user, please check the information you provided.');
    }
  });
  $('#update-user-sbt').removeAttr('email');
});
#+END_SRC

** Remove User
   In the previous slide, we observed that the =delete= buttons were attached
   to an event listener.As already been said, we are using AJAX calls to send a
   request to the backend server. We extract the =id= of the selected button,
   get the data of the input box associated with this button.  After extracting
   the email, a request is sent through a synchronous AJAX call. Based on the
   responce from backend server, appropriate success or error message is
   displayed.
  
#+NAME: delete_user
#+BEGIN_SRC js
var remove_users = function (button) {
$('#'+button.id).on('click', function(clickEvent) {   
    var data = JSON.stringify({
      user_email: $('#'+button.id).attr('email')
    });
    $.ajax({
      url: 'delete_user',
      data: data,
      type: 'POST',
      contentType: 'application/json;charset=utf-8',
      async: false,
      success: function (response) {
        get_users();
        window.alert ('User was deleted.');
        populate_tables_user();
      },
      error: function (response) {
        window.alert ('There was an error deleting the user, please check the information you provided.');
      }
    });
});
}
#+END_SRC
Now when a user is deleted, he is no longer availed to LDS. So, he should'nt be
there in the show users page. So, everytime a user is deleted or added, we call
the =populate_tables_user= functions so that a new request is again sent to the
backend server and we get back the updated list of users.

** User Tables
   As we are developing LDS dashboard,we ought to keep things as fancy as
possible.So everytime a page is rereshed, we dynamically update the user
tables. We create necessary rows in the table, display appropriate data and
attach the necessary event handlers.Below code shows how the users are being
populated. Each row contains the =name=, =email= and =role= of the user. It
Also contains an =Edit= button and a =Delete= button to edit and delete a user
respectively.

#+NAME: update_user_table
#+BEGIN_SRC js
var populate_tables_user = function() {
  $('#user-table').find('tr:not(:first)').remove();
  var tableRef = document.getElementById('user-table').getElementsByTagName('tbody')[0];
  for (var i in users_List) {
      var newRow = tableRef.insertRow(-1);
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(Number(i)+1));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(users_List[i].name));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(users_List[i].email));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(users_List[i].role));
      
      var newCell = newRow.insertCell(-1);
      var updateButton = document.createElement('button');
      updateButton.setAttribute('id','update-user-pre-sbt-'+i);
      updateButton.setAttribute('email', users_List[i].email);
      updateButton.setAttribute('name', users_List[i].name);
      updateButton.setAttribute('role', users_List[i].role);
      updateButton.appendChild(document.createTextNode('Update'));
      newCell.appendChild(updateButton);

      var newCell = newRow.insertCell(-1);
      var removeButton = document.createElement('button');
      removeButton.setAttribute('id','remove-user-pre-sbt-'+i);
      removeButton.setAttribute('email', users_List[i].email);
      removeButton.appendChild(document.createTextNode('Delete'));
      newCell.appendChild(removeButton);

  }
  updateHelperFunction();
};
#+END_SRC
** Role Tables
   Again to make the dashboard fancy, we update the tables dynamically each and
every time the browser is refreshed. We create necessary rows and populate them
with appropriate data and also attach a button to a row to be able to delete
the role.Only admin can delete a role.  Later on, we can give this access to
other roles also. Below code shows how the roles are being populated. Each row
contains the =name= of the role.It Also contains a =Delete= button to delete
the respective role.

#+NAME: update_role_table
#+BEGIN_SRC js
var populate_tables_role = function() {
  $('#role-table').find('tr:not(:first)').remove();
  var tableRef = document.getElementById('role-table').getElementsByTagName('tbody')[0];
  for (var i in roles_List) {
      var newRow = tableRef.insertRow(-1);
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(Number(i)+1));
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(roles_List[i].role));
      
      var newCell = newRow.insertCell(-1);
      var removeButton = document.createElement('button');
      removeButton.setAttribute('id','remove-role-pre-sbt-'+i);
      removeButton.setAttribute('role',roles_List[i].role);
      removeButton.appendChild(document.createTextNode('Delete'));
      newCell.appendChild(removeButton);
  }
  removeHelperFunction();
};

#+END_SRC
** Remove Role Helper on Admin Dash
   We have feeded the update and delete user buttons. It is now the remove
roles button's turn. We need to attach event handlers to the buttons so that it
can actually do its work.  These buttons are really nice and faithfull, they do
what has been said to them and the best part is they never try to act
oversmart.  All the =remove_role= buttons are extracted using the prefix
=remove-role-pre-sbt= and an event handler is attached to each of them so that
on clicking the button, the role is deleted.

#+NAME: updateRoleHelperFunction
#+BEGIN_SRC js
var removeHelperFunction = function() {
  var buttons = document.querySelectorAll('[id^="remove-role-pre-sbt"]');
    [].forEach.call(buttons, function (button) {
       remove_roles(button);
  });
};

#+END_SRC
** Remove Role
   In the previous slide, we observed that the =delete role= buttons were
   attached to an event listener. As already been said, we are using AJAX calls
   to send a request to the backend server. We extract the =id= of the selected
   button, get the data of the input box associated with this button.  After
   extracting the name of the role, a request is sent through a synchronous
   AJAX call. Based on the responce from the backend server, appropriate
   success or error message is displayed.

#+NAME: delete_role
#+BEGIN_SRC js
var remove_roles = function (button) {  
$('#'+button.id).on('click', function(clickEvent) {
  var data = JSON.stringify({
    role_name: $('#'+button.id).attr('role')
  });
  $.ajax({
    url: 'delete_role',
    data: data,
    type: 'POST',
    contentType: 'application/json;charset=utf-8',
    async: false,
    success: function (response) {
      get_roles();
      window.alert ('Role is deleted!');
      populate_tables_role();
    },
    error: function (response) {
      window.alert ('There was an error deleting the role, please check the information you provided.');
    }
  });
});
}

#+END_SRC
Now when a role is deleted, this role is no longer availed to LDS. So, it
should'nt be there in the show roles page. So, everytime a role is deleted or
added, we call the =populate_tables_role= functions so that a new request is
again sent to the backend server and we get back the updated list of roles.

** Update Profile
   A user who is logged should be able to update his profile.Session's details
are extracted and now the user logged in can edit his name or email.  He need
give his present email as the details are taken from the session.  A user
cannot update is role. If he is given this authority, every user would change
their role to admin and mess up things.  New details are taken from the input
boxes and a POST request is sent to the backend server.Based on the response,
an error message or success message is shown.

#+NAME: update_own_click
#+BEGIN_SRC js
$(document).on('click', '#update-profile-sbt', function(clickEvent) {
  var data = JSON.stringify({
    email: session_detail.email,
    new_name: $('#edit-new-name-own').val(),
    new_email: $('#edit-new-email-own').val()
  });
  $.ajax({
    url: 'update_profile',
    data: data,
    type: 'PUT',
    contentType: 'application/json;charset=utf-8',
    async: false,
    success: function (response) {
      window.alert ('User was updated');
      if (response.logout == true) {
        $('#login-logout-btn').click();
      }
      else {
        navigate('show-users');
        get_users();
      }
    },
    error: function (response) {
      navigate('show-users');      
      window.alert ('There was an error updating the user, please check the information you provided.');
    }
  });
  $('#update-user-sbt').removeAttr('email');
});

#+END_SRC
After the user updates his profile, he is logged out of LDS dashboard.
** OnClick Event Handlers
   The web application needs to be dynamic. For that, we have to take care of a
lot of issues and ensure that they are being addressed in a proper and
efficient way.

We need not update the =users= and =roles= table each and everytime the
application is refreshed. We can make it efficient by updating the user and
roles tables only when a change is detected.  So whenever a user or role is
added or deleted, we populate the =users= and =roles= table dynamically.

For that, we have defined a class =update-btn= which updates the tables
whenever an Add or Remove or Update operation is performed.

#+NAME: onClick_event_handler
#+BEGIN_SRC js
var onClickFunctions = function() {

  var select = document.querySelectorAll('[class$="update-btn"]');
  [].forEach.call(select, function (button) {
    $(document).on('click','#'+button.id, function(clickEvent) {
      get_roles();
      get_users();
      load_role_users();
    });  
  }); 
#+END_SRC 

It is essential that event handlers are attached to the buttons in the home
navigation bar.  Firstly, all the home buttons are extracted using the prefix
=home-btn-= . Now, for each button in the list we extract the second half of
the button which actually specifies the operation.  For Example : When we
perform =button.id.slice(9)= operation to the button =home-btn-add-user= we get
back =add-user=.  This is an inbuilt Javascript function which made things easy
for us.

The actual process of attaching event handlers happen now. Whenever a specific
button is clicked, we hide all the container and only show the navigation bar
and the respective container.  Then, we change the hash in the URL.

#+NAME: onClick_event_handler1
#+BEGIN_SRC js 
  var select = document.querySelectorAll('[id^="home-btn-"]');
  [].forEach.call(select, function (button) {
    var oid = button.id.slice(9);
    var id = oid + '-container';
    $(document).on('click','#'+button.id, function(clickEvent) {
      hashNotClicked=true;
      hide_all_containers();
      show_one_container('side-nav-container');
      show_one_container(id);
      navigate(oid);
    });
  });  
#+END_SRC

When the =home-btn-show-users= button is clicked, =populate_tables_user= is
called which gets the lsit of =users= list through an AJAX call and populates
the =show-users= page.
#+NAME: onClick_event_handler2
#+BEGIN_SRC js

  $(document).on('click', '#home-btn-show-users', function(clickEvent) {
    populate_tables_user(); 
  });
  
#+END_SRC

When the =home-btn-show-roles= button is clicked, =populate_tables_role= is
called which gets the list of =roles= list through an AJAX call and populates
the =show-roles= page.
#+NAME: onClick_event_handler3
#+BEGIN_SRC js
  $(document).on('click', '#home-btn-show-roles', function(clickEvent) {
    populate_tables_role();
  });
#+END_SRC  

When the =home-btn-update-user= button is clicked, =updateHelperFunction= is
called which attaches event handlers to all the update buttons.
#+NAME: onClick_event_handler4
#+BEGIN_SRC js
  $(document).on('click', '#home-btn-update-user', function(clickEvent) {
    updateHelperFunction();
  });

  $(document).on('click', '#home-btn-update-profile', function(clickEvent) {
    $('#edit-new-name-own').val(session_detail.name);
    $('#edit-new-email-own').val(session_detail.email);
  });

#+END_SRC
When the =home-btn-update-profile= button is clicked, the name and email of the
user logged in is extracted from the session and populated on the update
profile page.


#+NAME: onClick_event_handler5
#+BEGIN_SRC  js
var select = document.querySelectorAll('[class^="lds-show-asset"]');
  [].forEach.call(select, function (button) {
    $('#'+button.id).on('click', function(clickEvent) {
        console.log(button.id.split('-').pop(-1));
        call = button.id.split('-').pop(-1);
        populate_asset_tables_call(call,check_function(call));
    });  
  }); 

#+END_SRC

#+NAME: onClick_event_handler6
#+BEGIN_SRC  js
  var select = document.querySelectorAll('[class^="lds-show-over"]');
  [].forEach.call(select, function(button) {
    $('#'+button.id).on('click', function(clickEvent) {
      call = button.id.split('-').pop(-1);
      populate_over_tables_call(call,check_function(call));
    });
  });

#+END_SRC

Event handler is being added to the button =show-developers= in th home
navigation bar.  Whenever this button is clicked, the developers table is
populated.  Here =check_function('developers')= returns the list of developers.
#+NAME: onClick_event_handler7
#+BEGIN_SRC  js
 $(document).on('click', '#home-btn-show-developers', function(clickEvent) {
    populate_tables_dev(check_function('developers'));
  });

#+END_SRC

Event handler is being added to the button =show-sections= in th home
navigation bar.  Whenever this button is clicked, the sections table is
populated.  Here =check_function('sections')= returns the list of sections.
#+NAME: onClick_event_handler8
#+BEGIN_SRC  js
  $(document).on('click', '#home-btn-show-sections', function(clickEvent) {
    populate_tables_section(check_function('sections'));
  });
};
#+END_SRC

#+NAME: onClick_event_handler9
#+BEGIN_SRC js
$('#update-discipline-sbt').on('click', function(clickEvent){
  var alive_data = {
      discipline_id: $(this).attr('ids'),
      name: $('#edit-new-discipline-name').val()
    };
		var data = JSON.stringify(alive_data);
    check_function3('disciplines?discipline_id='+$(this).attr('ids'),JSON.parse(data));
  });

  $('#update-developer-sbt').on('click', function(clickEvent){
    var alive_data = {
      email: $(this).attr('email'),
      name: $('#edit-new-developer-name').val()
    };
		var data = JSON.stringify(alive_data);
    check_function3('developers?email='+$(this).attr('email'),JSON.parse(data));
  });

  $('#update-section-sbt').on('click', function(clickEvent){
    var alive_data = {
      s_id: $(this).attr('ids'),
      name: $('#edit-new-section-name').val()
    };
		var data = JSON.stringify(alive_data);
    check_function3('sections?s_id='+$(this).attr('ids'),JSON.parse(data));
  });

  $('#update-institute-sbt').on('click', function(clickEvent){
    var alive_data = {
      institute_id: $(this).attr('ids'),
      name: $('#edit-new-institute-name').val()
    };
		var data = JSON.stringify(alive_data);
    check_function3('institutes?institute_id='+$(this).attr('ids'),JSON.parse(data));
  });

#+END_SRC

** Update Lab and Experiment

#+NAME: update_lab_experiment
#+BEGIN_SRC js
 var select = document.querySelectorAll('[class$="update-lab-exp"]');
  [].forEach.call(select, function (button) {
    $('#'+button.id).on('click', function(clickEvent) {
       	var developer = [];
	      var hostings_info = [];
	      var asset = [];
        id = button.id.split('-')[1];
        ed = id.substr(0,3);

	institute_id_box = $('#update-'+id+'-institute-id-select');
    institute_id = institute_id_box[0].selectedOptions[0].value;

	discipline_id_box = $('#update-'+id+'-discipline-id-select');
    discipline_id = discipline_id_box[0].selectedOptions[0].value;

    integration_level_box = $('#update-'+id+'-integration-level-box');
	integration_level = parseInt(integration_level_box[0].value);

    $('#update-'+id+'-developer-id-select :selected').each(function(){
      var new_dev={};
      new_dev.name = $(this).attr('name');
      new_dev.email = $(this).val();
      developer.push(new_dev);
    });  

	 $('#update-'+id+'-container #update-developer-new-'+ed+'-id').find("li").each(function(){
        var input = $(this).find('input');
        var new_dev={};
			  new_dev.name = input[0].value ;
			  new_dev.email = input[1].value;
			  if(new_dev.name && new_dev.email)
			  developer.push(new_dev);
			});

	 $('#update-new-hosting-'+ed+'-div').find("li").each(function(){
              var input = $(this).find('input');
              var new_hos={};
			  new_hos.hosted_on = input[2].value ;
			  new_hos.hosted_url = input[0].value;
			  new_hos.hosting_status = input[1].value;
			  if(new_hos.hosted_on && new_hos.hosted_url && new_hos.hosting_status)
			  hostings_info.push(new_hos);
			});
   


  $('#update-'+id+'-asset-id-select :selected').each(function(){
    var new_ass={};
		  new_ass.path = $(this).val() ;
			new_ass.asset_type = $(this).attr('asset_type');
      asset.push(new_ass);
  });  
  

	 $('#update-'+id+'-container #update-asset-new'+ed+'-id').find("li").each(function(){
              var input = $(this).find('input');
              var new_ass={};
			  new_ass.path = input[0].value ;
			  new_ass.asset_type = input[1].value;
			  if(new_ass.path && new_ass.asset_type)
			  asset.push(new_ass);
			});

	var section1 = [];
  var section2 = [];  
  $('#update-'+id+'-section-id-select :selected').each(function(){
      name = $(this).val();
      var new_sec = {};
      new_sec.name = name;
      section1.push(name);
      section2.push(new_sec);
  });

	 $('#update-'+id+'-container #update-section-new-'+ed+'-id').find("li").each(function(){
        var input = $(this).find('input');
        var new_sec={};
        name = input[0].value ;
        new_sec.name = name;
			  if(name) {
         section1.push(name);
         section2.push(new_sec);
        }
			});

  switch(id) {
    case 'lab' : section = section2; break;
    case 'experiment' : section = section1; break;
  }

    var p = {}
    var alive_data = {
      id: $('#update-'+id+'-id-box').val(),
      overview: $('#update-'+id+'-overview-box').val(),
      name: $('#update-'+id+'-name-box').val(),
      discipline_id: discipline_id,
      institute_id: institute_id,
	    assets:asset,
	    hosting_info:hostings_info,
	    developers:developer,
      integration_level: integration_level,
	    sections:section
    };
    p[id] = alive_data
		var data = JSON.stringify(p);
      call = id+'s?'+ed+'_id='+$(this).attr('ids');
      check_function3(call,JSON.parse(data));
    });  
  }); 

#+END_SRC

** Add Institute and Discipline
   Adding a discipline and Institute is almost similar because they have same
attributes =name=, =id=, and =assets=. So, instead of writing two seperate
functions, we have made things simpler by writing a common function for both
the entities.

We extract the data from the User Interface and make a call to the
=check_function2= which takes the data and internally makes an AJAX call to the
LDS dashboard.
#+NAME: add_institute
#+BEGIN_SRC js
  var select = document.querySelectorAll('[class$="inst-disc"]');
  [].forEach.call(select, function (button) {
    $('#'+button.id).on('click', function(clickEvent) {
      id = button.id.split('-')[1];
      var new_ent={};
      new_ent[id+'_name'] = $('#add-'+id+'-name-box').val();
      new_ent[id+'_id'] = $('#add-'+id+'-id-box').val();
      new_ent.assets = [];
      $('#add-'+id+'-asset-id-select :selected').each(function(){
		      new_ent.assets.push($(this).val()) ;
      });  
       check_function2(id,JSON.parse(JSON.stringify(new_ent)));
    });
  });

#+END_SRC

** Add Section
   When the user wants to add a section to LDS, he is given a form to be
filled.  When he submits, the data is extracted and =check_function2= is called
along with the input data. This function internally send a request to LDS
dashboard.

#+NAME: add_section
#+BEGIN_SRC js
 $('#add-section-sbt').on('click', function() {
    var new_ent = {};
    new_ent.name = $('#add-section-name-box').val();
    check_function2('section',JSON.parse(JSON.stringify(new_ent)));
  });

#+END_SRC
** Add Lab and Experiment
#+NAME: add_lab_experiment
#+BEGIN_SRC js
var select = document.querySelectorAll('[class$="add-lab-exp"]');
[].forEach.call(select, function (button) {
  $('#'+button.id).on('click', function(clickEvent) {
    var developer = [];
    var hostings_info = [];
    var asset = [];
    id = button.id.split('-')[1];
    ed = id.substr(0,3);
    
    institute_id_box = $('#add-'+id+'-institute-id-select');
    institute_id = institute_id_box[0].selectedOptions[0].value;
    
    discipline_id_box = $('#add-'+id+'-discipline-id-select');
    discipline_id = discipline_id_box[0].selectedOptions[0].value;
    
    integration_level_box = $('#add-'+id+'-integration-level-box');
    integration_level = parseInt(integration_level_box[0].value);

    $('#add-'+id+'-developer-id-select :selected').each(function(){
      var new_dev={};
      new_dev.name = $(this).attr('name');
      new_dev.email = $(this).val();
      developer.push(new_dev);
    });  
    
    $('#add-'+id+'-container #add-developer-new-'+ed+'-id').find("li").each(function(){
      var input = $(this).find('input');
      var new_dev={};
      new_dev.name = input[0].value ;
      new_dev.email = input[1].value;
      if(new_dev.name && new_dev.email)
	developer.push(new_dev);
    });
    
    $('#add-new-hosting-'+ed+'-div').find("li").each(function(){
      var input = $(this).find('input');
      var new_hos={};
      new_hos.hosted_on = input[2].value ;
      new_hos.hosted_url = input[0].value;
      new_hos.hosting_status = input[1].value;
      if(new_hos.hosted_on && new_hos.hosted_url && new_hos.hosting_status)
	hostings_info.push(new_hos);
    });
    


    $('#add-'+id+'-asset-id-select :selected').each(function(){
      var new_ass={};
      new_ass.path = $(this).val() ;
      new_ass.asset_type = $(this).attr('asset_type');
      asset.push(new_ass);
  });  
    
    
    $('#add-'+id+'-container #add-asset-new-'+ed+'-div').find("li").each(function(){
      var input = $(this).find('input');
      var new_ass={};
      new_ass.path = input[0].value ;
      new_ass.asset_type = input[1].value;
      if(new_ass.path && new_ass.asset_type)
	asset.push(new_ass);
    });

    var section1 = [];
    var section2 = [];  
    $('#add-'+id+'-section-id-select :selected').each(function(){
      name = $(this).val();
      var new_sec = {};
      new_sec.name = name;
      section1.push(name);
      section2.push(new_sec);
    });
    
    $('#add-'+id+'-container #add-section-new-'+ed+'-id').find("li").each(function(){
      var input = $(this).find('input');
      var new_sec={};
      name = input[0].value ;
      new_sec.name = name;
      if(name) {
        section1.push(name);
        section2.push(new_sec);
      }
    });
    
    switch(id) {
    case 'lab' : section = section2; break;
    case 'experiment' : section = section1; break;
    }

    var p = {}
    var alive_data = {
      id: $('#add-'+id+'-id-box').val(),
      overview: $('#add-'+id+'-overview-box').val(),
      name: $('#add-'+id+'-name-box').val(),
      discipline_id: discipline_id,
      institute_id: institute_id,
      assets:asset,
      hosting_info:hostings_info,
      developers:developer,
      integration_level: integration_level,
      sections:section
    };
    p[id] = alive_data
    var data = JSON.stringify(p);
    
    check_function2(id,JSON.parse(data));
  });  
}); 

#+END_SRC

** Update User and Roles Dropdown
   There is an interesting problem. We will take you through the journey of how
we solved this problem.  So when the admin is adding a user to LDS, he needs to
give the details =name= , =email= and =role=. The role which he will assign to
the new user needs to be there in the database. So there is one ipute box and
admin needs to give the =role_name= with 100% accuracy which is not really a
convincing way to deal with things. So, we thought of having dropdowns so that
he can assign a role which is there in the list.This makes things easier and
more convincing.  Same goes with providing the list of emails in the database.

#+NAME: update_role_drop
#+BEGIN_SRC js
var load_role_users = function() {
  var select = document.querySelectorAll('[id$="-user-role"]');
  var newOptions = roles_List;
  [].forEach.call(select, function (dropdown) {
    $('option', dropdown).remove();
    $.each(newOptions, function(text, val) { 
      var option = new Option(val.role, val.role);
      dropdown.append(option); 
    });
  });
  var select = document.querySelectorAll('[id$="-user-email"]');
  var newOptions = users_List;
  [].forEach.call(select, function (dropdown) {
    $('option',dropdown).remove();
      $.each(newOptions, function(text, val) { 
        var option = new Option(val.email, val.email);
        dropdown.append(option); 
      });
  });
};

#+END_SRC
We first extract all the =options= of the =dropdown= by using the prefix
=-user-role= and =-user-email= respectively.Then we delete all these options by
the function =remove()=. Then, we create new options with the respective
=role_name= or =email= and append to the respective dropdowns.

** On hash change
   In a SPA, We have to dynamically display and hide containers based on our
requirement.  To show home, we wrote a function manually to take care of the
case when the hash is changed to home. This is beacause, for other hashes we
have automated things and dynamically displayed a container based on the input
received. The input received was sliced from the =id's= of buttons on the home
page.

#+NAME: hash_home
#+BEGIN_SRC js
$(window).on('hashchange', function(e) {
  if (get_window_hash_path() == 'home') {
      hide_all_containers();
      show_one_container('side-nav-container');
  }
})
#+END_SRC
So whenever the hash is changed to =home=, we hide all the container and show
only the side navigation bar.
** LDS Request
*** Get Requests
    Let us now recall the design of the LDS dashboard.The User makes a request
to the LDS dashboard and then the dashboard sends an appropriate request to the
actual LDS. Bases on the input, LDS sends back response to LDS dashboard and
then user is shown the details he requested.

#+NAME: lds_get
#+BEGIN_SRC js
var check_function = function(call) {
  $.ajax({
    url: 'https://localhost:5000/lds_auth_get',
    type: 'GET',
    data: {call:call},
    contentType: 'json/application,charset=UTF-8',
    async: false,
    success: function (response) {
      table_data = []
      table_data[0] = response.data
      if (response.page) {
        table_data[1] = response.page 
      }
    },
    error: function (response) {
      table_data = response.data
      console.log(response);
    }
  });
  return table_data
};

#+END_SRC
When a user wants to view the data of LDS, we take the input =entity= from the
user and based on that we make a call to the LDS.We call the check_function
with the argument =call= so that we send a request to LDS to extract
appropriate data.

*** Post Requests
    Again throwing light on the design we chose, User first send a request to
LDS dashboard and then the dashboard sends request to LDS.  TO send POST
request , the function =check_function2= is used.  Whenever we post data such
as adding an entity, the user gives his input in the forms. When he sumbits the
form, an AJAX call is made to the LDS dashboard in which the input data is
sent.  Also =call= is sent in the request which indicates, to which entity
changes are being made.

#+NAME: lds_post
#+BEGIN_SRC js
var check_function2 = function(call, data) {
  $.ajax({
    url: 'https://localhost:5000/lds_auth_post',
    type: 'POST',
    dataType: 'json',
    data:   JSON.stringify({
      data: data,
      call: call
    }),
    contentType: 'json/application,charset=UTF-8',
    async: false,
    success: function (response) {
      var a = response;
    },
    error: function (response) {
      var a = response;
    }
  });
};

#+END_SRC

*** Put Requests
    Landing on the update operations, the function =check_function3= is used to
process sending requests.Whenever a user updates any entity and sumbits, an
AJAX call is sent to the LDS Dashboard. We extract the input data given by the
user and send the =data= along with =call= which indicates the call to be made
to LDS server.

#+NAME: lds_put
#+BEGIN_SRC js
var check_function3 = function(call, data) {
    $.ajax({
    url: 'https://localhost:5000/lds_auth_put',
    type: 'PUT',
    dataType: 'json',
    data:   JSON.stringify({
      data: data,
      call: call
    }),
    contentType: 'json/application,charset=UTF-8',
    async: false,
    success: function (response) {
      console.log(response);     
    },
    error: function (response) {
      console.log(response);
    }
  });
};

#+END_SRC
*** Delete Requests
    Now let us deal with the delete requests. Whenever a user wants to delete
any entity , the user interface send an AJAX call to the LDS dashboard which
internally send a request to LDS.  We take the input from the user in the form
of =data=. We also send =call= in the request, which indicates the call to be
made to LDS server.

#+NAME: lds_delete
#+BEGIN_SRC js
var check_function4 = function(call, data) {
    $.ajax({
    url: 'https://localhost:5000/lds_auth_delete',
    type: 'DELETE',
    dataType: 'json',
    data:   JSON.stringify({
      data: data,
      call: call
    }),
    contentType: 'json/application,charset=UTF-8',
    async: false,
    success: function (response) {
      console.log(response);     
    },
    error: function (response) {
      console.log(response);
    }
  });
};

#+END_SRC

** Update for LDS entities
   
#+NAME: updateLdsFunction
#+BEGIN_SRC js
var updateLdsFunction = function(button, call) {

  $('#'+button.id).on('click', function(clickEvent){
      hashNotClicked=true;
      var updater = button.id.split('-pre-')[0]
	  	navigate(updater);
	});
};
#+END_SRC

** Remove for LDS entities
   Let us throw light on how the delete operations of the entities are being
made.  Event handlers are added to all the delete buttons of the LDS
dashboard. All the buttons of dashboard have specific id's which also indicate
the entity they are pointing to.

#+NAME: removeLdsFunction
#+BEGIN_SRC js
var removeLdsFunction = function(button, call) {
  $('#'+button.id).on('click', function(clickEvent){
    var btt = button.id.split('-')[1];
    switch(btt) {
    case 'lab': check_function4(btt,JSON.parse(JSON.stringify({ id:'lab_id='+$(button).attr('ids')}))); break;
    case 'experiment': check_function4(btt,JSON.parse(JSON.stringify({id:'exp_id='+$(button).attr('ids')}))); break;
    case 'developer': check_function4(btt,JSON.parse(JSON.stringify({id:'email_id='+$(button).attr('email')}))); break;
    case 'institute': check_function4(btt,JSON.parse(JSON.stringify({id:'institute_id='+$(button).attr('ids')}))); break;
    case 'discipline': check_function4(btt,JSON.parse(JSON.stringify({id:'discipline_id='+$(button).attr('ids')}))); break;
    case 'section': check_function4(btt,JSON.parse(JSON.stringify({id:'s_id='+$(button).attr('ids')}))); break;
    };
  });
};

#+END_SRC
In the above code,event handlers are being attached to all the delete buttons.
The =id= is split so as to get the entity which is to be deleted. After
splitting, it can either be =lab=, =experiment=, =developer=, =institute= or
=discipline=.  Now switch statement is used to call the appropriate function to
send request to the LDS dashboard. Based on the entity, the entity =name= and
=id= is sent in the arguments while calling =check_function4=.

** Update Helper for LDS
   All the =update= and =delete= buttons of LDS entities should be populated
with event handlers.  All the respective buttons are extracted using the prefix
update and remove respectively. After extracting the buttons, a loop is made to
attach event handlers to all the buttons which either delete or update
entities.
#+NAME: updateLdsHelperFunction
#+BEGIN_SRC js
var updateLdsHelperFunction = function(entity) {
  var buttons = document.querySelectorAll('[id^="update-'+entity+'-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       updateLdsFunction(button);
  });
  var buttons = document.querySelectorAll('[id^="remove-'+entity+'-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       removeLdsFunction(button);
  });
}

#+END_SRC
** Developer Table Populate
   When a User wants to see the list of developers, we ought to attract the
user and keep the page as fancy as possible and very easy for him to read the
data.  Tables are created to populate the developers table. Whenever we call
the function =populate_tables_dev= , the table is cleared and is freshly
populated.  It takes the updated data and populates the table accordingly.

#+NAME: populate_tables_dev
#+BEGIN_SRC js
var populate_tables_dev = function(data) {
  $('#developer-table').find('tr:not(:first)').remove();
  entity = 'developer';
  var buttons = document.querySelectorAll('[id^=Nav]');
  [].forEach.call(buttons, function (button) {
    $('#'+button.id).remove();
  });
  if (data.length-1) {
    var foo = document.getElementById("show-"+entity+'-container');
    page_data = JSON.parse(data[1]);
    var button1 = document.createElement("button");
    if (page_data.nextPageLink){
    button1.innerHTML = "Next";  
    button1.setAttribute('id','NavnextButtton'+entity)
      $(button1).on('click', function(clickEvent) {
        populate_over_tables_call(entity,check_function(page_data.nextPageLink.slice(1)));   
      });
      foo.appendChild(button1);
    }
    if (page_data.previousPageLink) {
      var button2 = document.createElement("button");
      button2.setAttribute('id','NavbackButton'+entity)
      button2.innerHTML = "Back";
      $(button2).on('click', function(clickEvent) {
        populate_over_tables_call(entity,check_function(page_data.previousPageLink.slice(1)));
      });
      foo.appendChild(button2); 
    }
  } 
  var tableRef = document.getElementById('developer-table').getElementsByTagName('tbody')[0];
  for (var i in data[0]) {
      var newRow = tableRef.insertRow(-1);
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(Number(i)+1));
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(data[0][i].name.name));
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(data[0][i].email.email));

      var newCell = newRow.insertCell(-1);
      var updateButton = document.createElement('button');
      updateButton.setAttribute('id','update-developer-pre-sbt-'+i);
      updateButton.setAttribute('email',data[0][i].email.email);
      updateButton.setAttribute('name',data[0][i].name.name);
      updateButton.appendChild(document.createTextNode('Update'));
      newCell.appendChild(updateButton);

      var newCell = newRow.insertCell(-1);
      var removeButton = document.createElement('button');
      removeButton.setAttribute('id','remove-developer-pre-sbt-'+i);
      removeButton.setAttribute('email',data[0][i].email.email);
      removeButton.appendChild(document.createTextNode('Delete'));
      newCell.appendChild(removeButton);
  }
  updateDeveloperHelperFunction(); 
};
#+END_SRC
Also, in each row, an =update= and a =delete= button is added so as
to update or delete the developer. The buttons are assigned specific
id's based on their =id= in the database.

** Sections Table Populate
   The below code populates the sections table whenever the user requests.
Every time the user requests, the table is freshly populated. All the rows
except the first row are deleted.  The table has 2 columns =id= and
=name=. Also each row contains 2 buttons =update= and =delete= to edit and
delete the section respectively. Accordingly, event handlers are added to the
buttons.

#+NAME: populate_tables_section
#+BEGIN_SRC js
var populate_tables_section = function(data) {
  $('#section-table').find('tr:not(:first)').remove();
  entity = 'section'
  var buttons = document.querySelectorAll('[id^=Nav]');
  [].forEach.call(buttons, function (button) {
    $('#'+button.id).remove();
  });
  if (data.length-1) {
    var foo = document.getElementById("show-"+entity+'-container');
    page_data = JSON.parse(data[1]);
    var button1 = document.createElement("button");
    if (page_data.nextPageLink){
    button1.innerHTML = "Next";  
    button1.setAttribute('id','NavnextButtton'+entity)
      $(button1).on('click', function(clickEvent) {
        populate_over_tables_call(entity,check_function(page_data.nextPageLink.slice(1)));   
      });
      foo.appendChild(button1);
    }
    if (page_data.previousPageLink) {
      var button2 = document.createElement("button");
      button2.setAttribute('id','NavbackButton'+entity)
      button2.innerHTML = "Back";
      $(button2).on('click', function(clickEvent) {
        populate_over_tables_call(entity,check_function(page_data.previousPageLink.slice(1)));
      });
      foo.appendChild(button2);
    }
  } 
  var tableRef = document.getElementById('section-table').getElementsByTagName('tbody')[0];
  for (var i in data[0]) {
      var newRow = tableRef.insertRow(-1);
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(Number(i)+1));
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(data[0][i].id));
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(data[0][i].name));

      var newCell = newRow.insertCell(-1);
      var updateButton = document.createElement('button');
      updateButton.setAttribute('id','update-section-pre-sbt-'+i);
      updateButton.setAttribute('ids',data[0][i].id);
      updateButton.setAttribute('name',data[0][i].name);
      updateButton.appendChild(document.createTextNode('Update'));
      newCell.appendChild(updateButton);

      var newCell = newRow.insertCell(-1);
      var removeButton = document.createElement('button');
      removeButton.setAttribute('id','remove-section-pre-sbt-'+i);
      removeButton.setAttribute('ids',data[0][i].id);
      removeButton.setAttribute('name',data[0][i].name);
      removeButton.appendChild(document.createTextNode('Delete'));
      newCell.appendChild(removeButton);
  }
    updateSectionsHelperFunction();
};  
#+END_SRC
** Discipine and Institute Table Populate
   When a user wants to have a look at the institutes or disciplines of LDS, he
just have to click the view button and all the institutes or disciplines are
populated.  Things are kept as fancy as possible.  We slice the =entity= which
is an argument to the function to know whether to populate disciplines or
institutes.  The institutes or disciplines are shown in a table with
appropriate columns. Also an =update= and =delete= button is added against it
so as to add or delete that particular entity.  The Buttons are assigned
specific id's based on its =id= in the database.

#+NAME: populate_asset_tables_call
#+BEGIN_SRC js
var populate_asset_tables_call = function(entity, data) {
  $('#'+entity.slice(0,-1) +'-table').find('tr:not(:first)').remove();
  var buttons = document.querySelectorAll('[id^=Nav]');
  [].forEach.call(buttons, function (button) {
    $('#'+button.id).remove();
  });
  if (data.length-1) {
    var foo = document.getElementById("show-"+entity+'-container');
    page_data = JSON.parse(data[1]);
    var button1 = document.createElement("button");
    if (page_data.nextPageLink){
    button1.innerHTML = "Next";  
    button1.setAttribute('id','NavnextButtton'+entity)
      $(button1).on('click', function(clickEvent) {
        populate_over_tables_call(entity,check_function(page_data.nextPageLink.slice(1)));   
      });
      foo.appendChild(button1);
    }
    if (page_data.previousPageLink) {
      var button2 = document.createElement("button");
      button2.setAttribute('id','NavbackButton'+entity)
      button2.innerHTML = "Back";
      $(button2).on('click', function(clickEvent) {
        populate_over_tables_call(entity,check_function(page_data.previousPageLink.slice(1)));
      });
      foo.appendChild(button2);
    }
  } 
  var tableRef = document.getElementById(entity.slice(0,-1) +'-table').getElementsByTagName('tbody')[0];
  for (var i in data[0]) {
      var newRow = tableRef.insertRow(-1);
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(Number(i)+1));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].asset));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i][entity.slice(0,-1)+'_id']));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i][entity.slice(0,-1)+'_name']));
      
      var newCell = newRow.insertCell(-1);
      var updateButton = document.createElement('button');
      updateButton.setAttribute('id','update-'+entity.slice(0,-1)+'-pre-sbt-'+i);
      updateButton.setAttribute('ids',data[0][i][entity.slice(0,-1)+'_id']);
      updateButton.appendChild(document.createTextNode('Update'));
      newCell.appendChild(updateButton);

      var newCell = newRow.insertCell(-1);
      var removeButton = document.createElement('button');
      removeButton.setAttribute('id','remove-'+entity.slice(0,-1)+'-pre-sbt-'+i);
      removeButton.setAttribute('ids',data[0][i][entity.slice(0,-1)+'_id']);
      removeButton.appendChild(document.createTextNode('Delete'));
      newCell.appendChild(removeButton);
  }
   updateLdsHelperFunction(entity.slice(0,-1));
};
 

#+END_SRC

** Lab and Experiment Table Populate
   Below code populates the labs or experiments table based on our requirement.
When the function is called, =entity= is sent in the arguments which tells us
whether to popuate labs or experiments. We slice the entity and accordingly
populate the tables.  The tables have quite a lot of columns. Everytime the
function is called, the table is cleared and is freshly populated based on the
data given to us. We dynamically create new rows,columns and buttons to the
table.

Also, an =update= and a =delete= button is added in every row to perform that
operation on the respective entity.

#+NAME: populate_over_tables_call
#+BEGIN_SRC js
 var populate_over_tables_call = function(entity, data) {
    $('#'+entity.slice(0,-1) +'-table').find('tr:not(:first)').remove();
    var buttons = document.querySelectorAll('[id^=Nav]');
    [].forEach.call(buttons, function (button) {
      $('#'+button.id).remove();
    });
    if (data.length-1) {
      var foo = document.getElementById("show-"+entity+'-container');
      page_data = JSON.parse(data[1]);
      var button1 = document.createElement("button");
      if (page_data.nextPageLink){
      button1.innerHTML = "Next";  
      button1.setAttribute('id','NavnextButtton'+entity)
        $(button1).on('click', function(clickEvent) {
          populate_over_tables_call(entity,check_function(page_data.nextPageLink.slice(1)));   
        });
        foo.appendChild(button1);
      }
      if (page_data.previousPageLink) {
        var button2 = document.createElement("button");
        button2.setAttribute('id','NavbackButton'+entity)
        button2.innerHTML = "Back";
        $(button2).on('click', function(clickEvent) {
          populate_over_tables_call(entity,check_function(page_data.previousPageLink.slice(1)));
        });
        foo.appendChild(button2);
      }
    } 
    var tableRef = document.getElementById(entity.slice(0,-1) +'-table').getElementsByTagName('tbody')[0];
  for (var i in data[0]) {
      console.log(data[0][i])
      var newRow = tableRef.insertRow(-1);
      var newCell = newRow.insertCell(-1);
      newCell.appendChild(document.createTextNode(Number(i)+1));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i][entity.slice(0,3)+'_id']));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i][entity.slice(0,3)+'_name']));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].overview));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].institute.institute_id));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].developers));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].sections));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].assets.path));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].discipline.discipline_name));
      var newCell = newRow.insertCell(-1);
      newCell.setAttribute('contenteditable',false);
      newCell.appendChild(document.createTextNode(data[0][i].hosting_info));
      
      var newCell = newRow.insertCell(-1);
      var updateButton = document.createElement('button');
      updateButton.setAttribute('id','update-'+entity.slice(0,-1)+'-pre-sbt-'+i);      
      updateButton.setAttribute('ids',data[0][i][entity.slice(0,3)+'_id']);
      updateButton.appendChild(document.createTextNode('Update'));
      newCell.appendChild(updateButton);

      var newCell = newRow.insertCell(-1);
      var removeButton = document.createElement('button');
      removeButton.setAttribute('id','remove-'+entity.slice(0,-1)+'-pre-sbt-'+i);
      removeButton.setAttribute('ids', data[0][i][entity.slice(0,3)+'_id']);
      removeButton.appendChild(document.createTextNode('Delete'));
      newCell.appendChild(removeButton);
  }
  updateLdsHelperFunction(entity.slice(0,-1));
};

#+END_SRC

** Checkbox - Dropdown Checker for New LDS entities
   While adding a lab or experiment to LDS, we need to add assets, developers
sections and hosting info. It is not necessary that they already exist in the
database. We can add new assets,developers, sections etc while adding a lab
too.

So a dropdown is given with the available data in the database. If the User
wants to add new assets ,developers etc , he can surely do.

A checkbox is given, if it is selected the user will be able to add new data.
Extra input boxes are given so as to add new data.
 
#+NAME: checkbox
#+BEGIN_SRC js
 var checkbox = function () {
  $("input[type='checkbox']").each(function() {
    $(this).change( function() {
      id = $(this).attr('id').split('-');
      $('#add-more-'+id[2]+'-'+id[3]+'-sbt').prop('disabled',!this.checked); //enable input
      $('#remove-more-'+id[2]+'-'+id[3]+'-sbt').prop('disabled',!this.checked);
    });
  });
};
 #+END_SRC
Bases on whether the checkbox is disabled or enabled, ablity to add data changes.
Accordingly, the properties of the checkboxes are updated.

** Update Developer
   Admin can also edit the developer's details. All the developers are listed in
the show-developers page. Againt each developer, there is an =update= and a
=delete= button.

Event handlers are being added to all the update buttons in the code given
below. First, all the update buttons are extracted using the =id= and then
=update_developers= function is called for each button which attaches event
handlers to those buttons.

When the button is clicked, we pre-populate the details of the developer we
want to edit and then navigate to update-developer page.

#+NAME: update_developers
#+BEGIN_SRC js
var updateDeveloperHelperFunction = function() {
  var buttons = document.querySelectorAll('[id^="update-developer-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       update_developers(button);
  });
   var buttons = document.querySelectorAll('[id^="remove-developer-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       removeLdsFunction(button);
  });
}
var update_developers = function(button) {
  $('#'+button.id).on('click', function(clickEvent){
    name = $('#'+button.id).attr('name');
    email = $('#'+button.id).attr('email');
    hashNotClicked=true;
		navigate('update-developer');
    $('#update-developer-sbt').attr('email',email);
    $('#edit-new-developer-name').val(name);
    check_function3('developers?email='+email,$('#edit-new-developer-name').val());
  });
};

#+END_SRC

** Update Assets
   Admin can also edit the assets details. All the assets are listed in the
show-assets page. Againt each asset, there is an =update= and a =delete=
button.

Event handlers are being added to all the update buttons in the code given
below. First, all the update buttons are extracted using the =id= and then
=update_assets= function is called for each button which attaches event
handlers to those buttons.

When the button is clicked, we pre-populate the details of the asset we want to
edit and then navigate to update-asset page.

#+NAME: update_assets
#+BEGIN_SRC js
var updateAssetHelperFunction = function() {
  var buttons = document.querySelectorAll('[id^="update-asset-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       update_assets(button);
  });
   var buttons = document.querySelectorAll('[id^="remove-asset-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       removeLdsFunction(button);
  });
}

var update_assets = function(button) {
  $('#'+button.id).on('click', function(clickEvent){
	  type = $('#'+button.id).attr('type');
	  path = $('#'+button.id).attr('path');
    hashNotClicked=true;
		navigate('update-asset');
    $('#update-asset-sbt').attr('path',path);
    $('#edit-new-asset-type').val(type);
    check_function3('assets?path='+email,$('#edit-new-asset-type').val());
	});
};

#+END_SRC
** Update Hosting Info
   Admin can also edit the Hosting Information . All the Hosting Info are listed
in the show-hosting-info page. Againt each hosted url, there is an =update= and
a =delete= button.

Event handlers are being added to all the update buttons in the code given
below. First, all the update buttons are extracted using the =id= and then
=update_hosting_info= function is called for each button which attaches event
handlers to those buttons.

When the button is clicked, we pre-populate the Hosting information we want to
edit and then navigate to update-hosting-info page.

#+NAME: update_hosting_info
#+BEGIN_SRC js
var updateHostingInfoHelperFunction = function() {
  var buttons = document.querySelectorAll('[id^="update-hosting-info-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       update_hosting-info(button);
  });
};

var update_hosting_info = function(button) {
  $('#'+button.id).on('click', function(clickEvent){
	  url = $('#'+button.id).attr('url');
	  status = $('#'+button.id).attr('status');
	  hosted_on = $('#'+button.id).attr('hosted_on');
    hashNotClicked=true;
		navigate('update-hosting-info');
    $('#update-hosting-status-sbt').attr('url',url);
    $('#edit-new-hosting-status').val(status);
    $('#edit-new-hosted-on').val(hosted_on);
	});
};

#+END_SRC

** Update Sections
   Admin can also edit the details of a section. All the sections are listed in
the show-sections page. Againt each developer, there is an =update= and a
=delete= button.

Event handlers are being added to all the update buttons in the code given
below. First, all the update buttons are extracted using the =id= and then
=update_sections= function is called for each button which attaches event
handlers to those buttons.

When the button is clicked, we pre-populate the details of the section we want
to edit and then navigate to update-section page.

#+NAME: update_sections
#+BEGIN_SRC js
var updateSectionsHelperFunction = function() {
  var buttons = document.querySelectorAll('[id^="update-section-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       update_sections(button);
  });
  var buttons = document.querySelectorAll('[id^="remove-section-pre-sbt-"]');
    [].forEach.call(buttons, function (button) {
       removeLdsFunction(button);
  });
}
var update_sections = function(button) {
  $('#'+button.id).on('click', function(clickEvent){
	  name = $('#'+button.id).attr('name');
	  id = $('#'+button.id).attr('ids');
    hashNotClicked=true;
		navigate('update-section');
    $('#update-section-sbt').attr('ids',id);
    $('#edit-new-section-name').val(name);
	});
};

#+END_SRC

** Data for New LDS entity helper
   When the user want to add new developers or assets or sections etc while
adding a lab or experiment, as discussed in the previous slide, he has to click
the check box.  When the checkbox is clicked , he should be provided with input
boxes with appropriate labels.  Below code shows the implementation of creating
new blocks in the form while adding new developers or assets or sections or
hosting info.  The created block is returned back.

#+NAME: new_add_data  
#+BEGIN_SRC js
var new_add_data = {
  developer: function() {
    var list = document.createElement("li");
    var input1 = document.createElement("input");
    $(input1).attr('type','text');
    $(input1).attr('placeholder','Name');
    $(list).append(input1);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input1);
    itemLabel.innerHTML = "Name: ";
    list.insertBefore(itemLabel, input1);
    var input2 = document.createElement('input');
    $(input2).attr('type','text');
    $(input2).attr('placeholder','abc@def.ghi');
    $(list).append(input2);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input2);
    itemLabel.innerHTML = "Email: ";
    list.insertBefore(itemLabel, input2);
    return list;
  },
  hosting: function() {
    var list = document.createElement('li');
    var input1 = document.createElement("input");
    $(input1).attr('type','text');
    $(input1).attr('placeholder','Hosted URL');
    $(list).append(input1);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input1);
    itemLabel.innerHTML = "Hosted URL: ";
    list.insertBefore(itemLabel, input1);
    var input2 = document.createElement("input");
    $(input2).attr('type','text');
    $(input2).attr('placeholder','Hosting Status');
    $(list).append(input2);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input2);
    itemLabel.innerHTML = "Hosting Status: ";
    list.insertBefore(itemLabel, input2); 
    var input3 = document.createElement("input");
    $(input3).attr('type','text');
    $(input3).attr('placeholder','Hosted On');
    $(list).append(input3);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input3);
    itemLabel.innerHTML = "Hosted On: ";
    list.insertBefore(itemLabel, input3);         
    return list;  
  },
  asset: function() {
    var list = document.createElement("li");
    var input1 = document.createElement("input");
    $(input1).attr('type','text');
    $(input1).attr('placeholder','Path');
    $(list).append(input1);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input1);
    itemLabel.innerHTML = "Path: ";
    list.insertBefore(itemLabel, input1);
    var input2 = document.createElement('input');
    $(input2).attr('type','text');
    $(input2).attr('placeholder','Type');
    $(list).append(input2);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input2);
    itemLabel.innerHTML = "Type: ";
    list.insertBefore(itemLabel, input2);
    return list;
  },
  section: function() {
    var list = document.createElement("li");
    var input1 = document.createElement("input");
    $(input1).attr('type','text');
    $(input1).attr('placeholder','Name');
    $(list).append(input1);
    var itemLabel = document.createElement("Label");
    $(itemLabel).attr("for", input1);
    itemLabel.innerHTML = "Name: ";
    list.insertBefore(itemLabel, input1);
    return list;
  }
};
#+END_SRC

** Add new LDS entity button
   Referring to the previous slide, the new input block is created and returned
back to us.  Below the checkbox there is a =+= and a =-= button to add a new
data or remove data.  Event handler is added to all the =+= buttons in the user
interface.  All the buttons are extracted using their id's and event handlers
are attached to each of them. Whenever a '+' button is clicked, new input block
is created and appended to the particualar =div=.

#+NAME: adding_data_test
#+BEGIN_SRC js
var adding_data_test = function (){
  var select = document.querySelectorAll('[id^="add-more-"]');  
  [].forEach.call(select, function (button) {
    var id = button.id.split('-');
    $('#'+button.id).on('click', function(){
      var li = new_add_data[id[2]]();
      var div = $('#add-'+id[2]+'-new-'+id[3]+'-id');
      $(div).append(li);
    });
  });
}

#+END_SRC
** Remove new LDS entity button 
   If a user clicks the =+= button and now he does'nt want to add data, he can
click the =-= button and delete that block.  All the =-= buttons are extracted
using the id's and event handlers are attached to all the buttons.  So,
whenever the '-' button is pressed, it first checks if there is atleast 1 block
in the div. If yes, it removes the last block from the div. If there is no
block, there is no point of removing blocks, so it does not do anything in that
case.

#+NAME: remove_data_test
#+BEGIN_SRC js
var remove_data_test = function (){
  var select = document.querySelectorAll('[id^="remove-more-"]');  
  [].forEach.call(select, function (button) {
    var id = button.id.split('-');
    $('#'+button.id).on('click', function(){
      var li = new_add_data[id[2]]();
      var main_id = '#add-'+id[2]+'-new-'+id[3]+'-id'
      var rcheck = $(main_id+' li');
      if (rcheck.length) {
        rcheck.get(-1).remove();
      }
    });
  });
};

#+END_SRC

** Dropdown populate for LDS Add
   As said earlier, while adding a lab or an experiment, the user can choose
entities like assets, developers, sections etc either from the dropdowns or can
add new data. So the dropdown needs to be populated with the data available in
the database.The Below code extracts data from the database and accordingly
populates the dropdowns.

The function =check_function()= is called which internally makes an AJAX call
to the LDS dashboard and extracts the data.  The Data is taken and the
dropdowns are populated accordingly.

Switch statements are used to make the code compact and elegant.

#+NAME: dropdown_fillup
#+BEGIN_SRC js
var dropdown_fillup = function() {

  var select = document.querySelectorAll('[id$="-id-select"]');
  [].forEach.call(select, function (dropdown) {
    console.log(dropdown)
    console.log(dropdown.id.split('-')[2])
    var newOptions = check_function(dropdown.id.split('-')[2]+'s');
    $('option',dropdown).remove();
      $.each(newOptions, function(text, val) { 
        
        console.log(val);

        switch(dropdown.id.split('-')[2]) {
          case 'developer': var option = new Option(val.email.email, val.email.email); break;
          case 'asset': var option = new Option(val.path, val.path); break;
          case 'institute': var option = new Option(val.institute_id , val.institute_id); break;
          case 'discipline': var option =  new Option(val.discipline_id, val.discipline_id); break;
          case 'section': var option = new Option(val.name,val.name); break;
        }
        
        dropdown.append(option); 
      });
  });
};
#+END_SRC

** On load
   Whenever the page refreshes or loads again, the following functions are
called. Appropriate HTML is generated based on the hash.

#+NAME: onload
#+BEGIN_SRC js
window.onload = function () {
  hashNotClicked=false;
  logged = is_logged_in();
  index_handler();
  if (logged){
  navigate('home');
  createDivisions();
  hide_all_containers();
  index_handler();  
  get_window_hash_path();
  adding_data_test();
  remove_data_test();
  //get_all_data();
  dropdown_fillup();
  checkbox();
  onClickFunctions();
  handlers_map();
  register_onhashchange_handlers(hash_to_handlers_map); 
  }
};  

#+END_SRC  

** Contact Form
#+NAME: contact
#+BEGIN_SRC js :tangle app/static/js/contact.js
var AuthAPI = {
    login: function() {
      window.location.href = '/login';
    },
    logout: function() {
      window.location.href = '/logout';
    }
  };
  
  var index_handler = function() {
    var auth_btn = $('#login-logout-btn')[0];
    var span_btn = $('#login-logout-spn')[0];

      auth_btn.onclick = AuthAPI.login;
      auth_btn.innerHTML = span_btn.outerHTML + '  ' + ' LOGIN';
      span_btn = $('#login-logout-spn')[0];
      span_btn.className = 'glyphicon glyphicon-log-in';
  };

  window.onload = function () {
    index_handler();
};

#+END_SRC
* HTML
** Index
The App is now a SPA. Here's the basic skeleton.  
~Side Nav to be removed from here in future releases.~
#+NAME: index
#+BEGIN_SRC html :tangle app/templates/index.html
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content ="width=device-width,initial-scale=1,user-scalable=yes"/>
    <title>LDS Dashboard</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="./static/css/style.css">
    <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css">
    <!-- jQuery library -->	
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js"></script>
    <script type="text/javascript" src="./static/js/main.js"></script>
  </head>
  <body id="body">
    <nav class="navbar navbar-inverse"> 
      <div class="container-fluid">
    	<div class="navbar-header">
      	  <a class="navbar-brand">LDS Dashboard</a>
    	</div>
    	<ul class="nav navbar-nav">
      	  <li><button id="home-btn-home" class="btn-link navbar-btn" style="padding-top: 5px" onclick=""><span id="home-spn" class="glyphicon glyphicon-home"></span>  HOME</button></li>
    	</ul>
    	<ul class="nav navbar-nav navbar-right">
      	  <li><button id="login-logout-btn" class="btn-link navbar-btn" style="padding-top: 5px;" onclick=""><span id="login-logout-spn" class=""></span></button>
    	</ul>
      </div>
    </nav>
  </body>
</html>

#+END_SRC
** Contact
#+NAME: contact
#+BEGIN_SRC html :tangle app/templates/contact.html

<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content ="width=device-width,initial-scale=1,user-scalable=yes"/>
    <title>LDS Dashboard</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="./static/css/style.css">
    <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css">
    <!-- jQuery library -->	
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.2.1.min.js"></script>
    <script type="text/javascript" src="./static/js/contact.js"></script>
  </head>
  <body id="body">
    <nav class="navbar navbar-inverse"> 
      <div class="container-fluid">
    	<div class="navbar-header">
      	  <a class="navbar-brand">LDS Dashboard</a>
    	</div>
    	<ul class="nav navbar-nav">
      	  <li><button id="home-btn-home" class="btn-link navbar-btn" style="padding-top: 5px" onclick=""><span id="home-spn" class="glyphicon glyphicon-home"></span>  HOME</button></li>
    	</ul>
    	<ul class="nav navbar-nav navbar-right">
      	  <li><button id="login-logout-btn" class="btn-link navbar-btn" style="padding-top: 5px;" onclick=""><span id="login-logout-spn" class=""></span></button>
    	</ul>
      </div>
    </nav>
    <div class = 'jumbotron' id ="contact_form">
    <form action="/signup" method="POST">
        <fieldset>
          <legend>LDS Request Form:</legend>
          Name:<br>
          <input id='input_name' type="text" name="input_name" value="">
          <br>
          Email:<br>
          <input id='input_email' type="text" name="input_email" value="">
          <br/>
          Body:<br>
          <input id='input_body' type="textarea" name="input_body" value="">
          <br/>
          <br/>
          <button type="submit" value="Submit">Submit</button>
          <button type="reset" value="Reset">Reset</button>
        </fieldset>
      </form>
    </div>
  </body>
</html>


#+END_SRC
* CSS
** CSS
   This is styling code for our side nav bar.
   ~Will be removed from here in future releases~
#+NAME: style
#+BEGIN_SRC css :tangle app/static/css/style.css 

.sidenav {
height: 100%;
width: 250px;
z-index: 1;
top: 0;
left: 0;
margin-top: 100px;
vertical-align:middle;
position: fixed;
background-color: #FFF;
overflow-x: hidden;
transition: 0.5s;
}

.sidenav button {
padding: 8px 8px 8px 32px;
text-decoration: none;
color: #818181;
display: block;
transition: 0.3s;
}

#main {
	margin-left: 280px;
}

form input {
	width: 400px;
	background-color: #fafafa;
	-webkit-border-radius: 3px;
	   -moz-border-radius: 3px;
			border-radius: 3px;
	border: 1px solid #cccccc;
	padding: 5px;
	font-size: 1.1em;
  }

  form input#submit {
	display: block;
	-webkit-border-radius: 3px; 
	   -moz-border-radius: 3px;
			border-radius: 3px;
	border:1px solid #d8d8d8;
	padding: 10px; 
	font-weight:bold; 
	text-align: center; 
	color: #000000; 
	background-color: #f4f4f4;
	background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #f4f4f4), color-stop(100%, #e5e5e5));
	background-image: -webkit-linear-gradient(top, #f4f4f4, #e5e5e5);
	background-image: -moz-linear-gradient(top, #f4f4f4, #e5e5e5);
	background-image: -ms-linear-gradient(top, #f4f4f4, #e5e5e5);
	background-image: -o-linear-gradient(top, #f4f4f4, #e5e5e5);
	background-image: linear-gradient(top, #f4f4f4, #e5e5e5);filter:progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=#f4f4f4, endColorstr=#e5e5e5);
  }
   
  form input#submit:hover{
	cursor: pointer;
	border:1px solid #c1c1c1; 
	background-color: #dbdbdb;
	background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#dbdbdb), color-stop(100%, #cccccc));
	background-image: -webkit-linear-gradient(top, #dbdbdb, #cccccc);
	background-image: -moz-linear-gradient(top, #dbdbdb, #cccccc);
	background-image: -ms-linear-gradient(top, #dbdbdb, #cccccc);
	background-image: -o-linear-gradient(top, #dbdbdb, #cccccc);
	background-image: linear-gradient(top, #dbdbdb, #cccccc);filter:progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr=#dbdbdb, endColorstr=#cccccc);
  }

  form
  {
	  display: inline-block;
	  margin-left: auto;
	  margin-right: auto;
	  text-align: left;
  }
  #contact_form {
	display: flex;
	justify-content: center;
  }
#+END_SRC

* JSON
** User and Role Specifications
   This is a JSON file in which the necessary specifications are given to
generate the HTML to do CRUD operation on entities 'Role' and 'User'.

#+NAME: admin_spec_file
#+BEGIN_SRC json :tangle ./app/static/js/main.json

{
  "beflogin_dash":[

  ],
  "onlogin_dash":[

  ],
  "admin_nav":[
    {
      "typeofdiv":"div",
      "id":"side-nav-container",
      "class":"sidenav hidden",
      "elements":[
        {
          "typeofdiv":"div",
          "class":"list-group table-of-contents",
          "elements":[
            {
              "typeofdiv":"button",
              "id":"home-btn-add-user",
              "class":"list-group-item",
              "innerHTML":" Add User "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-add-role",
              "class":"list-group-item",
              "innerHTML":" Add Role "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-update-profile",
              "class":"list-group-item",
              "innerHTML":" Update Profile "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-users",
              "class":"list-group-item",
              "innerHTML":" Show Users "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-roles",
              "class":"list-group-item",
              "innerHTML":" Show Roles "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-add-experiment",
              "class":"list-group-item",
              "innerHTML":" Add Experiment "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-add-lab",
              "class":"list-group-item",
              "innerHTML":" Add Lab "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-labs",
              "class":"lds-show-over-lab list-group-item",
              "innerHTML":" Show Labs "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-experiments",
              "class":"lds-show-over-exp list-group-item",
              "innerHTML":" Show Experiments "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-developers",
              "class":"lds-show-dev list-group-item",
              "innerHTML":" Show Developer "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-institutes",
              "class":"lds-show-asset-inst list-group-item",
              "innerHTML":" Show Institute "
            },
            {
              "typeofdiv":"button",
              "id":"home-btn-show-disciplines",
              "class":"lds-show-asset-disc list-group-item",
              "innerHTML":" Show Discipline "
            }
          ]
        }
      ]
    }
  ],
  "admin_dash":[
    {
      "typeofdiv":"div",
      "id":"main",
      "elements":[
        {
          "typeofdiv":"div",
          "id":"add-user-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add User"
            },
            {
              "typeofdiv":"ul",
              "id":"add-user",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"name_label",
                      "innerText":"Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-user-name",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"email_label",
                      "innerText":"Email:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-user-email",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"role_label",
                      "innerText":"Role:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"add-user-role",
                      "innerText":"Role:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-user-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Add",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "class":"btn btn-primary",
                      "type":"button",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
        {
          "typeofdiv":"div",
          "id":"add-role-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Role"
            },
            {
              "typeofdiv":"ul",
              "id":"add-role",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"role_label",
                      "innerText":"Role:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-role-name",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-role-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Add Role",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
        {
          "typeofdiv":"div",
          "id":"update-user-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit User"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-user",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-name-label",
                      "innerText":"New Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-name",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-email-label",
                      "innerText":"New Email:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-email",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-role-label",
                      "innerText":"New Role:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"edit-user-role",
                      "innerText":"Role:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"update-user-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Done",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
        {
          "typeofdiv":"div",
          "id":"update-profile-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit User"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-profile",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-name-own-label",
                      "innerText":"New Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-name-own",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-email-own-label",
                      "innerText":"New Email:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-email-own",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"update-profile-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Done",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
        {
          "typeofdiv":"div",
          "id":"show-users-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Users"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"user-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Name"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Email"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Role"
                        },
                        {
                          "typeofdiv":"th"
                        },
                        {
                          "typeofdiv":"th"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-users",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
        {
          "typeofdiv":"div",
          "id":"show-roles-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Roles"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"role-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Name"
                        },
                        {
                          "typeofdiv":"th"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-roles",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

** LDS Specifications
   This is a JSON file in which the necessary specifications are given to
generate HTML to do the CRUD operations on LDS database.
*** Add Asset
#+NAME: add_asset_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json  
        {
          "typeofdiv":"div",
          "id":"add-asset-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Asset"
            },
            {
              "typeofdiv":"ul",
              "id":"add-asset",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"asset_path_label",
                      "innerText":"Path:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-asset-path-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"asset_type_label",
                      "innerText":"Type:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-asset-type-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-asset-sbt",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Add Asset",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Add Institute
#+NAME: add_institute_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json  
        {
          "typeofdiv":"div",
          "id":"add-institute-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Institute"
            },
            {
              "typeofdiv":"ul",
              "id":"add-institute",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"institute_id_label",
                      "innerText":"Institute Id:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-institute-id-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"institute_name_label",
                      "innerText":"Institute Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-institute-name-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"asset_label",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-asset-id",
                      "innerText":"Asset:"
                    }                  
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-institute-sbt",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Add Institute",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Add Discipline
#+NAME: add_discipline_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json  
        {
          "typeofdiv":"div",
          "id":"add-discipline-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Discipline"
            },
            {
              "typeofdiv":"ul",
              "id":"add-discipline",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"disicpline_id_label",
                      "innerText":"Discipline Id:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-discipline-id-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"discipline_name_label",
                      "innerText":"Discipline Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-discipline-name-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"asset_label",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-asset-id",
                      "innerText":"Asset:"
                    }
                   
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-discipline-sbt",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Add Discipline",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Add Section
#+NAME: add_section_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"add-section-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Section"
            },
            {
              "typeofdiv":"ul",
              "id":"add-section",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"name_label",
                      "innerText":"Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-section-name-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-section-sbt",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Add Section",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Add Experiment
#+NAME: add_experiment_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json
        {
          "typeofdiv":"div",
          "id":"add-experiment-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Experiment"
            },
            {
              "typeofdiv":"ul",
              "id":"add-experiment",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"id-label",
                      "innerText":"Id:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-experiment-id-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"name-label",
                      "innerText":"Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-experiment-name-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"experiment-overview-label",
                      "innerText":"Overview:"
                    },
                    {
                      "typeofdiv":"input",
                      "type":"text",
                      "id":"add-experiment-overview-box"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"discipline-label",
                      "innerText":"Discipline:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"add-experiment-discipline-id-select",
                      "innerText":"Discipline:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"institute_label",
                      "innerText":"Institute:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"add-experiment-institute-id-select",
                      "innerText":"Institute:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"developer-label",
                      "innerText":"Developer:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-experiment-developer-id-select",
                      "innerText":"Developer:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"new-developer-experiment-div",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "type":"checkbox",
                          "id":"select-check-developer-exp-id",
                          "innerText":"Add new developers"
                        },
                        {
                          "typeofdiv":"label",
                          "for":"select-check-developert-exp-id",
                          "innerHTML":"Add new developers?"
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-developer-new-exp-id"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"add-more-developer-exp-sbt",
                          "type":"button",
                          "disabled":"true",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-developer-exp-sbt",
                          "type":"button",
                          "disabled":"true",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"hosting-info-experiment-label",
                      "innerText":"Hosting Info:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"add-new-hosting-exp-div",
                      "elements":[
                        {
                          "typeofdiv":"li",
                          "elements":[
                            {
                              "typeofdiv":"label",
                              "for":"hosted_info",
                              "innerHTML":"  Hosted URL:  "
                            },                        
                            {
                              "typeofdiv":"input",
                              "type":"text",
                              "id":"hosted_info"
                            },
                            {
                              "typeofdiv":"label",
                              "for":"hosted_info_status",
                              "innerHTML":"  Hosting Status:  "
                            },                        
                            {
                              "typeofdiv":"input",
                              "type":"text",
                              "id":"hosted_info_status"
                            },
                            {
                              "typeofdiv":"label",
                              "for":"hosted_info_on",
                              "innerHTML":"  Hosted On:  " 
                            },                        
                            {
                              "typeofdiv":"input",
                              "type":"text",
                              "id":"hosted_info_on",
                              "name":" "
                            },
                            {
                              "typeofdiv":"br"  
                            }
                          ]
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-hosting-new-exp-id"
                        },
                        {
                          "typeofdiv":"br"  
                        },                        
                        {
                          "typeofdiv":"input",
                          "id":"add-more-hosting-exp-sbt",
                          "type":"button",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-hosting-exp-sbt",
                          "type":"button",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }               
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"integration_level_label",
                      "innerText":"Integration Level:"
                    },
                    {
                      "typeofdiv":"input",
                      "type":"number",
                      "min":"0",
                      "max":"6",
                      "id":"add-experiment-integration-level-box"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"asset_label",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-experiment-asset-id-select",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"new-asset-exp-div",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "type":"checkbox",
                          "id":"select-check-asset-exp-id",
                          "innerText":"Add assets"
                        },
                        {
                          "typeofdiv":"label",
                          "for":"select-check-asset-exp-id",
                          "innerHTML":"Add new assets?"
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-asset-new-exp-id"
                        },
                        {
                          "typeofdiv":"br"  
                        },
                        {
                          "typeofdiv":"input",
                          "id":"add-more-asset-exp-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-asset-exp-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }                   
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"section_label",
                      "innerText":"Section:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-experiment-section-id-select",
                      "innerText":"Section:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"new-section-exp-div",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "type":"checkbox",
                          "id":"select-check-section-exp-id",
                          "innerText":"Add sections"
                        },
                        {
                          "typeofdiv":"label",
                          "for":"select-check-section-exp-id",
                          "innerHTML":"Add new sections?"
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-section-new-exp-id"
                        },
                        {
                          "typeofdiv":"br"  
                        },
                        {
                          "typeofdiv":"input",
                          "id":"add-more-section-exp-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-section-exp-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }                   
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-experiment-sbt",
                      "type":"button",
                      "class":"btn btn-primary lab-exp",
                      "value":"Add",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "class":"btn btn-primary",
                      "type":"button",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC
*** Add Lab
#+NAME: add_lab_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"add-lab-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Lab"
            },
            {
              "typeofdiv":"ul",
              "id":"add-lab",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"id-label",
                      "innerText":"Id:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-lab-id-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"name-label",
                      "innerText":"Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-experiment-name-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"lab-overview-label",
                      "innerText":"Overview:"
                    },
                    {
                      "typeofdiv":"input",
                      "type":"text",
                      "id":"add-experiment-overview-box"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"discipline-label",
                      "innerText":"Discipline:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"add-lab-discipline-id-select",
                      "innerText":"Discipline:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"institute-label",
                      "innerText":"Institute:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"add-lab-institute-id-select",
                      "innerText":"Institute:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"developer-label",
                      "innerText":"Developer:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-lab-developer-id-select",
                      "innerText":"Developer:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"new-developer-lab-div",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "type":"checkbox",
                          "id":"select-check-developer-lab-id",
                          "innerText":"Add new developers"
                        },
                        {
                          "typeofdiv":"label",
                          "for":"select-check-developert-lab-id",
                          "innerHTML":"Add new developers?"
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-developer-new-lab-id"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"add-more-developer-lab-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-developer-lab-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }
                   
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"hosting-info-lab-label",
                      "innerText":"Hosting Info:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"add-new-hosting-lab-div",
                      "elements":[
                        {
                          "typeofdiv":"li",
                          "elements":[
                            {
                              "typeofdiv":"label",
                              "for":"hosted_info",
                              "innerHTML":"  Hosted URL:  "
                            },                        
                            {
                              "typeofdiv":"input",
                              "type":"text",
                              "id":"hosted-info"
                            },
                            {
                              "typeofdiv":"label",
                              "for":"hosted-info-status",
                              "innerHTML":"  Hosting Status:  "
                            },                        
                            {
                              "typeofdiv":"input",
                              "type":"text",
                              "id":"hosted-info-status"
                            },
                            {
                              "typeofdiv":"label",
                              "for":"hosted-info-on",
                              "innerHTML":"  Hosted On:  " 
                            },                        
                            {
                              "typeofdiv":"input",
                              "type":"text",
                              "id":"hosted-info-on",
                              "name":" "
                            },
                            {
                              "typeofdiv":"br"  
                            }
                          ]
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-hosting-new-lab-id"
                        },
                        {
                          "typeofdiv":"br"  
                        },                        
                        {
                          "typeofdiv":"input",
                          "id":"add-more-hosting-lab-sbt",
                          "type":"button",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-hosting-lab-sbt",
                          "type":"button",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }               
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"integration-level-label",
                      "innerText":"Integration Level:"
                    },
                    {
                      "typeofdiv":"input",
                      "type":"number",
                      "min":"0",
                      "max":"6",
                      "id":"add-lab-integration-level-box"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"asset_label",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-lab-asset-id-select",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"new-asset-lab-div",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "type":"checkbox",
                          "id":"select-check-asset-lab-id"
                        },
                        {
                          "typeofdiv":"label",
                          "for":"select-check-asset-lab-id",
                          "innerHTML":"Add new assets?"
                        },
                        {
                          "typeofdiv":"div",
                          "id":"add-asset-new-lab-id"
                        },
                        {
                          "typeofdiv":"br"  
                        },
                        {
                          "typeofdiv":"input",
                          "id":"add-more-asset-lab-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-asset-lab-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }                    
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"section-label",
                      "innerText":"Section:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"add-lab-section-id-select",
                      "innerText":"Section:"
                    },
                    {
                      "typeofdiv":"div",
                      "id":"new-section-lab-div",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "type":"checkbox",
                          "id":"select-check-section-lab-id",
                          "innerText":"Add new Sections"
                        },
                        {
                          "typeofdiv":"label",
                          "for":"select-check-section-lab-id",
                          "innerHTML":"Add new sections?"
                        },                        
                        {
                          "typeofdiv":"div",
                          "id":"add-section-new-lab-id"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"add-more-section-lab-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"+"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"remove-more-section-lab-sbt",
                          "type":"button",
                          "disabled":"disabled",
                          "class":"btn",
                          "value":"-"
                        }                                      
                      ]
                    }       
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-lab-sbt",
                      "type":"button",
                      "class":"btn btn-primary lab-exp",
                      "value":"Add",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "class":"btn btn-primary",
                      "type":"button",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Add Hosting Info
#+NAME: add_hosting_info_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json  
        {
          "typeofdiv":"div",
          "id":"add-hosting-info-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Hosting Info"
            },
            {
              "typeofdiv":"ul",
              "id":"add-hosting-info",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"hosted_url_label",
                      "innerText":"Hosted URL:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-hosted-url-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"hosting_status_label",
                      "innerText":"Hosting Status:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-hosting-status-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"hosting_on_label",
                      "innerText":"Hosted On:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-hosted-on-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-hosting-info-sbt",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Add Hosting Info",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Add Developer
#+NAME: add_developer_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"add-developer-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Add Developer"
            },
            {
              "typeofdiv":"ul",
              "id":"add-developer",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"developer_name_label",
                      "innerText":"Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-developer-name-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"developer_email_label",
                      "innerText":"Email:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"add-developer-email-box",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"add-developer-sbt",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Add",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Edit Lab

#+NAME: edit_lab_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"update-lab-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Lab"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-lab",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-name-lab-label",
                      "innerText":"New Lab Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-lab-name",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-lab-overview-label",
                      "innerText":"New Overview:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-lab-overview",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-integration-level",
                      "innerText":"Integration Level:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-integration-level",
                      "type":"integer"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-institute",
                      "innerText":"Institute:"
                    },
                    {
                      "typeofdiv":"select",         
                      "id":"edit-lab-institute",
                      "innerText":"Institute:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-discipline",
                      "innerText":"Discipline:"
                    },
                    {
                      "typeofdiv":"select",          
                      "id":"edit-lab-discipline",
                      "innerText":"Discipline:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-developers",
                      "innerText":"Developer:"
                    },
                    {
                      "typeofdiv":"select",          
                      "id":"edit-lab-developers",
                      "innerText":"Developer:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-sections",
                      "innerText":"Section:"
                    },

                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"edit-lab-sections",
                      "innerText":"Sections:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-assets",
                      "innerText":"Asset:"
                    },
                    {
                      "typeofdiv":"select",          
                      "id":"edit-lab-assets",
                      "innerText":"Assets:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-hosting-info",
                      "innerText":"Hosting Info:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"edit-lab-hosting-info",
                      "innerText":"Hosting Info:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"update-lab-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Done",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Edit Institute

#+NAME: edit_institute_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json
   {
          "typeofdiv":"div",
          "id":"update-institute-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Institute"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-institute",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                          "typeofdiv":"label",
                          "id":"new-institute-name-label",
                          "innerText":"New Institute Name:"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"edit-new-institute-name",
                          "type":"text"
                        }
                      ]
                    },
                    {
                      "typeofdiv":"li",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "id":"update-institute-sbt",
                          "type":"button",
                          "class":"btn btn-primary update-btn",
                          "value":"Done",
                          "onclick":""
                        },
                        {
                          "typeofdiv":"input",
                          "id":"cancel",
                          "type":"button",
                          "class":"btn btn-primary",
                          "value":"Cancel",
                          "onclick":""
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"label",
                  "id":"error-box",
                  "value":"Error",
                  "class":"error hidden"
                }
              ]
        },
#+END_SRC
*** Edit Discipline
    
#+NAME: edit_discipline_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json
       {
          "typeofdiv":"div",
          "id":"update-discipline-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Discipline"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-discipline",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                          "typeofdiv":"label",
                          "id":"new-discipline-name-label",
                          "innerText":"New Discipline Name:"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"edit-new-discipline-name",
                          "type":"text"
                        }
                      ]
                    },
                    {
                      "typeofdiv":"li",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "id":"update-discipline-sbt",
                          "type":"button",
                          "class":"btn btn-primary update-btn",
                          "value":"Done",
                          "onclick":""
                        },
                        {
                          "typeofdiv":"input",
                          "id":"cancel",
                          "type":"button",
                          "class":"btn btn-primary",
                          "value":"Cancel",
                          "onclick":""
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"label",
                  "id":"error-box",
                  "value":"Error",
                  "class":"error hidden"
                }
              ]
        },

#+END_SRC
*** Edit Experiment

#+NAME: edit_experiment_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json
        {
          "typeofdiv":"div",
          "id":"update-experiment-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Experiment"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-experiment",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-experiment-name-label",
                      "innerText":"New Experiment Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-experiment-name",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-experiment-overview-label",
                      "innerText":"New Overview:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-experiment-overview",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"integration_level_label",
                  "innerText":"New Integration Level:"
                  },
                  {
                  "typeofdiv":"input",
                  "type":"number",
                  "min":"0",
                  "max":"6",
                  "id":"edit-new-experiment-integration-level"
                  }
                ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"new_exp_institute_label",
                  "innerText":"New Institute:"
                  },
                  {
                      "typeofdiv":"select",
                      "id":"edit-experiment-institute",
                      "innerText":"Institute:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"new_exp_discipline_label",
                  "innerText":"New Discipline:"
                  },
                    {
                      "typeofdiv":"select",
         
                      "id":"edit-experiment-discipline",
                      "innerText":"Discipline:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"new_exp_developers_label",
                  "innerText":"New Developer:"
                  },
                    {
                      "typeofdiv":"select",
                      "id":"edit-experiment-developers",
                      "innerText":"Developer:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"new_exp_sections_label",
                  "innerText":"New Section:"
                  },

                    {
                      "typeofdiv":"select",
                      "id":"edit-experiment-sections",
                      "innerText":"Sections:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"new_exp_assets_label",
                  "innerText":"New Asset:"
                  },
                    {
                      "typeofdiv":"select",
                      "id":"edit-experiment-assets",
                      "innerText":"Assets:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                  {
                  "typeofdiv":"label",
                  "id":"new_exp_hosting_info_label",
                  "innerText":"New Hosting Info :"
                  },

                    {
                      "typeofdiv":"select",
                      "id":"edit-experiment-hosting-info",
                      "innerText":"Hosting Info:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"update-experiment-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Done",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Edit Hosting Info

#+NAME: edit_hosting_info_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"update-hosting-info-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Hosting Info"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-hosting-info",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                          "typeofdiv":"label",
                          "id":"new-hosting-status-label",
                          "innerText":"New Hosting Status:"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"edit-new-hosting-status",
                          "type":"text"
                        }
                      ]
                    },
                    {
                      "typeofdiv":"li",
                      "elements":[
                        {
                              "typeofdiv":"label",
                              "id":"new-hosted-on-label",
                              "innerText":"New Hosted on:"
                            },
                            {
                              "typeofdiv":"input",
                              "id":"edit-new-hosted-on",
                              "type":"text"
                            }
                          ]
                        },
                        {
                          "typeofdiv":"li",
                          "elements":[
                            {
                              "typeofdiv":"input",
                              "id":"update-hosting-status-sbt",
                              "type":"button",
                              "class":"btn btn-primary update-btn",
                              "value":"Done",
                              "onclick":""
                            },
                            {
                              "typeofdiv":"input",
                              "id":"cancel",
                              "type":"button",
                              "class":"btn btn-primary",
                              "value":"Cancel",
                              "onclick":""
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "typeofdiv":"label",
                      "id":"error-box",
                      "value":"Error",
                      "class":"error hidden"
                    }
                  ]
        },

#+END_SRC
*** Edit Developer

#+NAME: edit_developer_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"update-developer-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Developer"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-developer",
              "elements":[
                {
                "typeofdiv":"li",
                "elements":[
                        {
                          "typeofdiv":"label",
                          "id":"new-developer-name-label",
                          "innerText":"New Developer Name:"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"edit-new-developer-name",
                          "type":"text"
                        }
                      ]
                    },
                    {
                      "typeofdiv":"li",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "id":"update-developer-sbt",
                          "type":"button",
                          "class":"btn btn-primary update-btn",
                          "value":"Done",
                          "onclick":""
                        },
                        {
                          "typeofdiv":"input",
                          "id":"cancel",
                          "type":"button",
                          "class":"btn btn-primary",
                          "value":"Cancel",
                          "onclick":""
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"label",
                  "id":"error-box",
                  "value":"Error",
                  "class":"error hidden"
                }
              ]
        },
#+END_SRC
*** Edit Asset

#+NAME: edit_asset_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"update-asset-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Asset"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-asset",
              "elements":[
                {
                "typeofdiv":"li",
                "elements":[
                {
                "typeofdiv":"label",
                "id":"new-asset-type-label",
                "innerText":"New Asset Type:"
                },
                {
                "typeofdiv":"input",
                "id":"edit-new-asset-type",
                "type":"text"
                }
                ]
                },
                {
                "typeofdiv":"li",
                "elements":[
                {
                          "typeofdiv":"input",
                          "id":"update-asset-sbt",
                          "type":"button",
                          "class":"btn btn-primary update-btn",
                          "value":"Done",
                          "onclick":""
                        },
                        {
                          "typeofdiv":"input",
                          "id":"cancel",
                          "type":"button",
                          "class":"btn btn-primary",
                          "value":"Cancel",
                          "onclick":""
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"label",
                  "id":"error-box",
                  "value":"Error",
                  "class":"error hidden"
                }
              ]
        },
#+END_SRC
*** Edit Section

#+NAME: edit_section_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
       {
          "typeofdiv":"div",
          "id":"update-section-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit Section"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-section",
              "elements":[
                {
                "typeofdiv":"li",
                "elements":[
                        {
                          "typeofdiv":"label",
                          "id":"new-section-name-label",
                          "innerText":"New section Name:"
                        },
                        {
                          "typeofdiv":"input",
                          "id":"edit-new-section-name",
                          "type":"text"
                        }
                      ]
                    },
                    {
                      "typeofdiv":"li",
                      "elements":[
                        {
                          "typeofdiv":"input",
                          "id":"update-section-sbt",
                          "type":"button",
                          "class":"btn btn-primary update-btn",
                          "value":"Done",
                          "onclick":""
                        },
                        {
                          "typeofdiv":"input",
                          "id":"cancel",
                          "type":"button",
                          "class":"btn btn-primary",
                          "value":"Cancel",
                          "onclick":""
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"label",
                  "id":"error-box",
                  "value":"Error",
                  "class":"error hidden"
                }
              ]
        },
#+END_SRC
*** Delete Lab
#+NAME: delete_lab_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-lab-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Lab"
              },
            {
              "typeofdiv":"ul",
              "id":"delete-lab",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"lab-id-label",
                      "innerText":"Lab Id:"
                    },
                    {
                      "typeofdiv":"select",
                      "id":"delete-lab-id",
                      "innerText":"Delete:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC
*** Delete Experiment
#+NAME: delete_experiment_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-experiment-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Experiment"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-lab",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-experiment-id-label",
                   "innerText":"Experiment Id:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-experiment-id",
                      "innerText":"Experiment:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Delete Institute
#+NAME: delete_institute_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-institute-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Institute"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-institute",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-institute-id-label",
                   "innerText":"Institute Id:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-institute-id",
                      "innerText":"Institute:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Delete Discipline
#+NAME: delete_discipline_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-discipline-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Discipline"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-discipline",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-discipline-label",
                   "innerText":"Discipline Id:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-discipline-id",
                      "innerText":"Discipline:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Delete Section
#+NAME: delete_section_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-section-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Section"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-section",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-section-label",
                   "innerText":"Section Name:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-section-name",
                      "innerText":"Section:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Delete Asset
#+NAME: delete_asset_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-asset-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Asset"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-asset",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-asset-label",
                   "innerText":"Asset URL:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-asset-url",
                      "innerText":"Asset:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Delete Hosting Info
#+NAME: delete_hosting_info_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-hosting-info-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Hosting Info"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-hosting-info",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-hosting-info-label",
                   "innerText":"Hosted URL:"
                    },
                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-hosting-info-url",
                      "innerText":"Hosting Info:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Delete Developer
#+NAME: delete_developer_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"remove-developer-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Delete Developer"
            },
            {
              "typeofdiv":"ul",
              "id":"delete-developer",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                   {
                   "typeofdiv":"label",
                   "id":"delete-developer-label",
                   "innerText":"Developer Email:"
                    },

                    {
                      "typeofdiv":"select",
                      "multiple":"multiple",
                      "id":"delete-developer-email",
                      "innerText":"Developer:"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"delete",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Delete",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Show Labs
#+NAME: show_labs_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-labs-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Labs"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"lab-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Lab Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Lab Name"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Overview"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Discipline"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Institute"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Integration Status"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-labs",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC
*** Show Experiments
#+NAME: show_experiments_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-experiments-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Experiments"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"experiment-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Experiment Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Experiment Name"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Overview"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Discipline"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Institute"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Integration Status"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-experiments",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Show Assets
#+NAME: show_assets_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-assets-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Assets"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"asset-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Asset Type"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Asset Path"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-assets",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Show Institutes
#+NAME: show_institutes_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-institutes-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Institutes"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"institute-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Asset"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Institute Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Institute Name"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-institutes",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Show Disciplines
#+NAME: show_disciplines_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-disciplines-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Disciplines"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"discipline-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Asset"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Discipline Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Discipline Name"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-disciplines",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Show Sections
#+NAME: show_sections_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
       {
          "typeofdiv":"div",
          "id":"show-sections-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Sections"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"section-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Section Name"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-sections",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },
#+END_SRC

*** Show Hosting Info
#+NAME: show_hosting_info_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-hosting-info-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Hosting Info"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"section-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Hosted on"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Hosted URL"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Hosting Status"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-sections",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        },

#+END_SRC

*** Show Developers
#+NAME: show_developers_spec
#+BEGIN_SRC json :tangle ./app/static/js/main.json 
        {
          "typeofdiv":"div",
          "id":"show-developers-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Show Developers"
            },
            {
              "typeofdiv":"table",
              "class":"table table-striped",
              "id":"developer-table",
              "elements":[
                {
                  "typeofdiv":"thead",
                  "class":"thead",
                  "elements":[
                    {
                      "typeofdiv":"tr",
                      "elements":[
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Id"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Name"
                        },
                        {
                          "typeofdiv":"th",
                          "innerHTML":"Email"
                        }
                      ]
                    }
                  ]
                },
                {
                  "typeofdiv":"tbody",
                  "class":"tbody  "
                }
              ]
            },
            {
              "typeofdiv":"ul",
              "id":"show-developers",
              "elements":[

              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        }  
      ]
    }
  ],

#+END_SRC

** Guest
   This is the JSON specification for the guest dashboard.
#+NAME: guest_spec_file
#+BEGIN_SRC json :tangle ./app/static/js/main.json
  "guest_dash":[
    {
      "typeofdiv":"div",
      "id":"main",
      "elements":[
        {
          "typeofdiv":"div",
          "id":"update-profile-container",
          "class":"hidden",
          "elements":[
            {
              "typeofdiv":"p",
              "innerHTML":"Edit User"
            },
            {
              "typeofdiv":"ul",
              "id":"edit-profile",
              "elements":[
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-name-own-label",
                      "innerText":"New Name:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-name-own",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"label",
                      "id":"new-email-own-label",
                      "innerText":"New Email:"
                    },
                    {
                      "typeofdiv":"input",
                      "id":"edit-new-email-own",
                      "type":"text"
                    }
                  ]
                },
                {
                  "typeofdiv":"li",
                  "elements":[
                    {
                      "typeofdiv":"input",
                      "id":"update-profile-sbt",
                      "type":"button",
                      "class":"btn btn-primary update-btn",
                      "value":"Done",
                      "onclick":""
                    },
                    {
                      "typeofdiv":"input",
                      "id":"cancel",
                      "type":"button",
                      "class":"btn btn-primary",
                      "value":"Cancel",
                      "onclick":""
                    }
                  ]
                }
              ]
            },
            {
              "typeofdiv":"label",
              "id":"error-box",
              "value":"Error",
              "class":"error hidden"
            }
          ]
        }
      ]
    }
  ]
}
#+END_SRC


* Tangle                                                        :boilerplate:
  
** sources

#+BEGIN_SRC js :tangle app/static/js/main.js :eval no :noweb yes
<<auth_api>>
<<index_handler>>
<<logged_in>>
<<get_json>>
<<create_Division>>
<<decoding_Json>>
<<attach_Division>>
<<handlers_map>>
<<handlers_map_func_def>>
<<current_window_hash>>
<<hash_navigate_function>>
<<register_on_hash_change>>
<<show_all_container>>
<<show_one_container>>
<<hide_all_container>>
<<get_users>>
<<get_roles>>
<<add_user>>
<<add_role>>
<<updateUserHelperFunction>>
<<update_users>>
<<delete_user>>
<<update_user_table>>
<<update_role_table>>
<<updateRoleHelperFunction>>
<<delete_role>>
<<update_own_click>>
<<onClick_event_handler>>
<<onClick_event_handler1>>
<<onClick_event_handler2>>
<<onClick_event_handler3>>
<<onClick_event_handler4>>
<<onClick_event_handler5>>
<<onClick_event_handler6>>
<<onClick_event_handler7>>
<<onClick_event_handler8>>
<<onClick_event_handler9>>
<<update_lab_experiment>>
<<add_institute>>
<<add_section>>
<<add_lab_experiment>>
<<update_role_drop>>
<<hash_home>>
<<lds_get>>
<<lds_post>>
<<lds_put>>
<<lds_delete>>
<<updateLdsFunction>>
<<removeLdsFunction>>
<<updateLdsHelperFunction>>
<<populate_tables_dev>>
<<populate_tables_section>>
<<populate_asset_tables_call>>
<<populate_tables_section>>
<<populate_over_tables_call>>
<<checkbox>>
<<update_developers>>
<<update_assets>>
<<update_hosting_info>>
<<update_sections>>
<<new_add_data>>
<<adding_data_test>>
<<remove_data_test>>
<<dropdown_fillup>>

<<onload>>
#+END_SRC
   


   

